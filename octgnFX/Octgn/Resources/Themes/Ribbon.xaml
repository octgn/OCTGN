<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Custom="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:Primitives="clr-namespace:Microsoft.Windows.Controls.Ribbon.Primitives;assembly=RibbonControlsLibrary" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Custom1="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell">

    <Style TargetType="{x:Type Custom:Ribbon}">
        <Style.Resources>
            <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">Fade</PopupAnimation>
        </Style.Resources>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFDFE9F5"/>
        <Setter Property="BorderBrush" Value="#FFB9C9DA"/>
        <Setter Property="MouseOverBorderBrush" Value="#FFFFB700"/>
        <Setter Property="MouseOverBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFFEFBF4" Offset="0"/>
                    <GradientStop Color="#FFFDE7CE" Offset="0.19"/>
                    <GradientStop Color="#FFFDDEB8" Offset="0.39"/>
                    <GradientStop Color="#FFFFCE6B" Offset="0.39"/>
                    <GradientStop Color="#FFFFDE9A" Offset="0.79"/>
                    <GradientStop Color="#FFFFEBAA" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="PressedBorderBrush" Value="#FFC29B29"/>
        <Setter Property="PressedBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFE3C085" Offset="0"/>
                    <GradientStop Color="#FFF4CC89" Offset="0.19"/>
                    <GradientStop Color="#FFF5C777" Offset="0.36"/>
                    <GradientStop Color="#FFF5BB56" Offset="0.36"/>
                    <GradientStop Color="#FFF4CE9A" Offset="0.79"/>
                    <GradientStop Color="#FFF3E28D" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CheckedBorderBrush" Value="#FFC29B29"/>
        <Setter Property="CheckedBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFFFDCA0" Offset="0"/>
                    <GradientStop Color="#FFFFD692" Offset="0.18"/>
                    <GradientStop Color="#FFFFC45D" Offset="0.39"/>
                    <GradientStop Color="#FFFFD178" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusedBorderBrush" Value="#FFFFB700"/>
        <Setter Property="FocusedBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFFEFBF4" Offset="0"/>
                    <GradientStop Color="#FFFDE7CE" Offset="0.19"/>
                    <GradientStop Color="#FFFDDEB8" Offset="0.39"/>
                    <GradientStop Color="#FFFFCE6B" Offset="0.39"/>
                    <GradientStop Color="#FFFFDE9A" Offset="0.79"/>
                    <GradientStop Color="#FFFFEBAA" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:Ribbon}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" Grid.Row="1" Grid.RowSpan="3"/>
                        <Border Grid.ColumnSpan="3" Grid.Row="1">
                            <Popup x:Name="PART_ITEMSPRESENTERPOPUP" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" RenderOptions.ClearTypeHint="Enabled" FocusVisualStyle="{x:Null}" Focusable="True" Margin="0,0,5,5">
                                    <Border x:Name="CollapsedPopupBackgroundBorder" Background="{TemplateBinding Background}">
                                        <ContentControl x:Name="popupItemsPresenterHost" KeyboardNavigation.DirectionalNavigation="Cycle" Focusable="False" Margin="0,1,0,0" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Border>
                                </Themes:SystemDropShadowChrome>
                            </Popup>
                        </Border>
                        <ContentControl x:Name="mainItemsPresenterHost" Grid.ColumnSpan="3" Focusable="False" Grid.Row="2">
                            <Border x:Name="groupsBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Height="91" SnapsToDevicePixels="True">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#EEFFFFFF" Offset="0"/>
                                        <GradientStop Color="#BBFFFFFF" Offset="0.1"/>
                                        <GradientStop Color="#05FFFFFF" Offset="0.5"/>
                                        <GradientStop Color="#20FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="#60FFFFFF" BorderThickness="0,0,0,1" Margin="0,0,0,1" SnapsToDevicePixels="True" Background="#FF444444">
                                    <ItemsPresenter x:Name="ItemsPresenter"/>
                                </Border>
                            </Border>
                        </ContentControl>
                        <Border x:Name="QatBottomHost" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="3" Grid.Row="3">
                            <ContentPresenter x:Name="QatBottomHostContentPresenter" HorizontalAlignment="Left" IsHitTestVisible="True" VerticalAlignment="Center"/>
                        </Border>
                        <Border x:Name="titleBarBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Grid.ColumnSpan="3" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#EEFFFFFF" Offset="0"/>
                                    <GradientStop Color="#BBFFFFFF" Offset="0.1"/>
                                    <GradientStop Color="#05FFFFFF" Offset="0.5"/>
                                    <GradientStop Color="#20FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <DockPanel Grid.ColumnSpan="3" Grid.Column="0" Height="{Binding WindowCaptionHeight}" LastChildFill="True">
                            <ContentControl x:Name="windowButtonPlaceHolder" DockPanel.Dock="Right" Focusable="False" IsHitTestVisible="False" Margin="3,0,0,0" Width="{Binding WindowCaptionButtonsLocation.Width}">
                                <ContentControl.Visibility>
                                    <TemplateBinding Property="IsHostedInRibbonWindow">
                                        <TemplateBinding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </ContentControl.Visibility>
                            </ContentControl>
                            <ContentControl x:Name="windowIconPadding" DockPanel.Dock="Left" Focusable="False" IsHitTestVisible="False" Margin="0,0,3,0" Width="{Binding SmallIconSize.Width}"/>
                            <Primitives:RibbonTitlePanel x:Name="PART_TitlePanel">
                                <Grid x:Name="QatTopHost">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="QatTopHostLeftBorder" BorderBrush="#66CCCCCC" BorderThickness="1,0,1,0.9" Background="#77222222" Grid.Column="0" CornerRadius="0,0,2,2" Margin="8,2,0,2" Width="3"/>
                                    <ContentPresenter x:Name="QatTopHostContentPresenter" Content="{TemplateBinding QuickAccessToolBar}" Grid.Column="1" IsHitTestVisible="True"/>
                                    <Border x:Name="QatTopHostRightBorder" BorderBrush="#66CCCCCC" BorderThickness="1,0,1,0.9" Background="#77222222" Grid.Column="2" CornerRadius="0,0,2,2" Margin="0,2,1,2" Width="3"/>
                                </Grid>
                                <ContentPresenter x:Name="PART_TitleHost" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" ContentSource="Title" TextElement.Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" TextElement.FontWeight="{DynamicResource {x:Static SystemFonts.CaptionFontWeightKey}}" TextElement.FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}" TextElement.FontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="3,0" MinWidth="75" MinHeight="{Binding WindowCaptionHeight}">
                                    <ContentPresenter.Resources>
                                        <DataTemplate x:Key="{DataTemplateKey DataType={x:Type System:String}}" DataType="{x:Type System:String}">
                                            <TextBlock x:Name="titleTextBlock" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="0,-2,0,0" Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis"/>
                                            <DataTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsGlassEnabled}" Value="True"/>
                                                        <Condition Binding="{Binding IsHostedInRibbonWindow, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:Ribbon}}}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Effect" TargetName="titleTextBlock">
                                                        <Setter.Value>
                                                            <DropShadowEffect BlurRadius="5" Color="White" ShadowDepth="0"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding IsGlassEnabled}" Value="False">
                                                    <Setter Property="Margin" TargetName="titleTextBlock" Value="0"/>
                                                    <Setter Property="VerticalAlignment" TargetName="titleTextBlock" Value="Center"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding HighContrast}" Value="True">
                                                    <Setter Property="Margin" TargetName="titleTextBlock" Value="0,1,0,0"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                                <Custom:RibbonContextualTabGroupItemsControl x:Name="PART_ContextualTabGroupItemsControl" HorizontalAlignment="Center" IsHitTestVisible="True" Custom1:WindowChrome.IsHitTestVisibleInChrome="True"/>
                            </Primitives:RibbonTitlePanel>
                        </DockPanel>
                        <ContentPresenter x:Name="applicationMenu" Content="{TemplateBinding ApplicationMenu}" Grid.Row="1" VerticalAlignment="Top"/>
                        <Custom:RibbonTabHeaderItemsControl x:Name="TabHeaderItemsControl" Grid.Column="1" HorizontalAlignment="Left" Margin="1,1,1,0" Grid.Row="1" VerticalAlignment="Top"/>
                        <ContentPresenter x:Name="PART_HelpPane" ContentTemplate="{TemplateBinding HelpPaneContentTemplate}" Content="{TemplateBinding HelpPaneContent}" Grid.Column="2" ContentSource="HelpPaneContent" HorizontalAlignment="Right" Grid.Row="1" VerticalAlignment="Top"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsCollapsed" Value="True">
                            <Setter Property="Visibility" TargetName="applicationMenu" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="QatBottomHost" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="QatTopHost" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="mainItemsPresenterHost" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="TabHeaderItemsControl" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="PART_HelpPane" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="PART_ContextualTabGroupItemsControl" Value="Collapsed"/>
                            <Setter Property="MinWidth" TargetName="PART_TitleHost" Value="0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCollapsed" Value="True"/>
                                <Condition Property="IsHostedInRibbonWindow" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <Trigger Property="ShowQuickAccessToolBarOnTop" Value="False">
                            <Setter Property="Content" TargetName="QatTopHostContentPresenter" Value="{x:Null}"/>
                            <Setter Property="Visibility" TargetName="QatTopHost" Value="Collapsed"/>
                            <Setter Property="Content" TargetName="QatBottomHostContentPresenter" Value="{Binding QuickAccessToolBar, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderThickness" TargetName="BackgroundBorder" Value="0,0,0,1"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding QuickAccessToolBar.HasItems, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding QuickAccessToolBar.CustomizeMenuButton, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="QatTopHost" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="QatBottomHost" Value="Collapsed"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMinimized" Value="True">
                            <Setter Property="Content" TargetName="mainItemsPresenterHost" Value="{x:Null}"/>
                            <Setter Property="Visibility" TargetName="mainItemsPresenterHost" Value="Collapsed"/>
                            <Setter Property="Content" TargetName="popupItemsPresenterHost" Value="{Binding ElementName=groupsBorder}"/>
                            <Setter Property="BorderThickness" TargetName="BackgroundBorder" Value="0,0,0,1"/>
                        </Trigger>
                        <Trigger Property="WindowIconVisibility" Value="Collapsed">
                            <Setter Property="Visibility" TargetName="windowIconPadding" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="QatTopHostLeftBorder" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMinimized" Value="True"/>
                                <Condition Property="ShowQuickAccessToolBarOnTop" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="QatBottomHost" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsHostedInRibbonWindow" Value="False">
                            <Setter Property="Grid.Row" TargetName="BackgroundBorder" Value="0"/>
                            <Setter Property="Grid.RowSpan" TargetName="BackgroundBorder" Value="4"/>
                            <Setter Property="Visibility" TargetName="titleBarBackground" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="windowIconPadding" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="QatTopHostLeftBorder" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderThickness" TargetName="BackgroundBorder" Value="0"/>
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_ITEMSPRESENTERPOPUP" Value="True">
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:RibbonWindow}}}" Value="False"/>
                                <Condition Binding="{Binding IsGlassEnabled}" Value="False"/>
                                <Condition Binding="{Binding IsHostedInRibbonWindow, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="PART_TitleHost" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding HighContrast}" Value="True">
                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="BackgroundBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            <Setter Property="Background" TargetName="groupsBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="groupsBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            <Setter Property="Height" TargetName="groupsBorder" Value="94"/>
                            <Setter Property="BorderBrush" TargetName="QatBottomHost" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            <Setter Property="Background" TargetName="titleBarBackground" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="titleBarBackground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            <Setter Property="Background" TargetName="CollapsedPopupBackgroundBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="PopupAnimation" TargetName="PART_ITEMSPRESENTERPOPUP" Value="None"/>
                            <Setter Property="Margin" TargetName="QatTopHostLeftBorder" Value="10,1,2,2"/>
                            <Setter Property="Width" TargetName="QatTopHostLeftBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="QatTopHostLeftBorder" Value="0"/>
                            <Setter Property="CornerRadius" TargetName="QatTopHostLeftBorder" Value="0"/>
                            <Setter Property="Background" TargetName="QatTopHostLeftBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Margin" TargetName="QatTopHostRightBorder" Value="0,1,2,2"/>
                            <Setter Property="Width" TargetName="QatTopHostRightBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="QatTopHostRightBorder" Value="0"/>
                            <Setter Property="CornerRadius" TargetName="QatTopHostRightBorder" Value="0"/>
                            <Setter Property="Background" TargetName="QatTopHostRightBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding UxThemeName}" Value="Aero">
                            <Setter Property="Margin" TargetName="QatTopHost" Value="0,-3,0,0"/>
                            <Setter Property="Margin" TargetName="QatTopHostLeftBorder" Value="3,3,0,5"/>
                            <Setter Property="Background" TargetName="QatTopHostLeftBorder" Value="#81444444"/>
                            <Setter Property="BorderBrush" TargetName="QatTopHostLeftBorder" Value="#69EEEEEE"/>
                            <Setter Property="Margin" TargetName="QatTopHostRightBorder" Value="0,3,1,5"/>
                            <Setter Property="Background" TargetName="QatTopHostRightBorder" Value="#81444444"/>
                            <Setter Property="BorderBrush" TargetName="QatTopHostRightBorder" Value="#69EEEEEE"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding UxThemeName}" Value="Aero"/>
                                <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:RibbonWindow}}}" Value="Maximized"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" TargetName="QatTopHost" Value="0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Custom:RibbonTab}">
        <Setter Property="KeyTipService.IsKeyTipScope" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:RibbonTab}">
                    <Grid x:Name="MainGrid" ClipToBounds="True">
                        <Grid.Visibility>
                            <TemplateBinding Property="IsSelected">
                                <TemplateBinding.Converter>
                                    <BooleanToVisibilityConverter/>
                                </TemplateBinding.Converter>
                            </TemplateBinding>
                        </Grid.Visibility>
                        <Line x:Name="OuterLeftLine" Stroke="{Binding ContextualTabGroup.Background, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="2" X1="0" X2="{Binding TabHeaderLeft, RelativeSource={RelativeSource TemplatedParent}}" Y1="0" Y2="0"/>
                        <Line x:Name="OuterRightLine" Stroke="{Binding ContextualTabGroup.Background, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="2" X1="{Binding TabHeaderRight, RelativeSource={RelativeSource TemplatedParent}}" X2="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" Y1="0" Y2="0"/>
                        <ScrollViewer x:Name="ScrollViewer">
                            <ScrollViewer.Style>
                                <Style TargetType="{x:Type ScrollViewer}">
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
                                    <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="CanContentScroll" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="3" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                    <RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineLeftCommand" Focusable="False" HorizontalContentAlignment="Left">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="Width" Value="14"/>
                                                                <Setter Property="Background" Value="{Binding (Custom:RibbonControlService.Ribbon).Background, RelativeSource={RelativeSource Self}}"/>
                                                                <Setter Property="BorderBrush" Value="{Binding (Custom:RibbonControlService.Ribbon).BorderBrush, RelativeSource={RelativeSource Self}}"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="3,0,0,3">
                                                                                <Border x:Name="InnerBorder" Background="#FF000000" CornerRadius="3,0,0,3">
                                                                                    <Path x:Name="GlyphPath" Data="M4,0L0,3.5 4,7" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                </Border>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="HorizontalContentAlignment" Value="Right">
                                                                                    <Setter Property="Data" TargetName="GlyphPath" Value="M0,0L4,3.5 0,7"/>
                                                                                    <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0,3,3,0"/>
                                                                                    <Setter Property="CornerRadius" TargetName="InnerBorder" Value="0,3,3,0"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="{Binding (Custom:RibbonControlService.Ribbon).MouseOverBackground, RelativeSource={RelativeSource Self}}"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="{Binding (Custom:RibbonControlService.Ribbon).PressedBackground, RelativeSource={RelativeSource Self}}"/>
                                                                                </MultiDataTrigger>
                                                                                <DataTrigger Binding="{Binding HighContrast}" Value="True">
                                                                                    <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                                                                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                                                    <Setter Property="CornerRadius" TargetName="InnerBorder" Value="0"/>
                                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="Transparent"/>
                                                                                    <Setter Property="Fill" TargetName="GlyphPath" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                                                                </DataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                                                </MultiDataTrigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                        <RepeatButton.Visibility>
                                                            <MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
                                                                <MultiBinding.Converter>
                                                                    <Primitives:RibbonScrollButtonVisibilityConverter/>
                                                                </MultiBinding.Converter>
                                                                <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            </MultiBinding>
                                                        </RepeatButton.Visibility>
                                                    </RepeatButton>
                                                    <RepeatButton Grid.Column="2" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineRightCommand" Focusable="False" HorizontalContentAlignment="Right">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="Width" Value="14"/>
                                                                <Setter Property="Background" Value="{Binding (Custom:RibbonControlService.Ribbon).Background, RelativeSource={RelativeSource Self}}"/>
                                                                <Setter Property="BorderBrush" Value="{Binding (Custom:RibbonControlService.Ribbon).BorderBrush, RelativeSource={RelativeSource Self}}"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="3,0,0,3">
                                                                                <Border x:Name="InnerBorder" Background="Black" CornerRadius="3,0,0,3">
                                                                                    <Path x:Name="GlyphPath" Data="M4,0L0,3.5 4,7" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                </Border>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="HorizontalContentAlignment" Value="Right">
                                                                                    <Setter Property="Data" TargetName="GlyphPath" Value="M0,0L4,3.5 0,7"/>
                                                                                    <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0,3,3,0"/>
                                                                                    <Setter Property="CornerRadius" TargetName="InnerBorder" Value="0,3,3,0"/>
                                                                                </Trigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="{Binding (Custom:RibbonControlService.Ribbon).MouseOverBackground, RelativeSource={RelativeSource Self}}"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="{Binding (Custom:RibbonControlService.Ribbon).PressedBackground, RelativeSource={RelativeSource Self}}"/>
                                                                                </MultiDataTrigger>
                                                                                <DataTrigger Binding="{Binding HighContrast}" Value="True">
                                                                                    <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                                                                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                                                    <Setter Property="CornerRadius" TargetName="InnerBorder" Value="0"/>
                                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="Transparent"/>
                                                                                    <Setter Property="Fill" TargetName="GlyphPath" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                                                                </DataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                                </MultiDataTrigger>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                                                </MultiDataTrigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                        <RepeatButton.Visibility>
                                                            <MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
                                                                <MultiBinding.Converter>
                                                                    <Primitives:RibbonScrollButtonVisibilityConverter/>
                                                                </MultiBinding.Converter>
                                                                <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            </MultiBinding>
                                                        </RepeatButton.Visibility>
                                                    </RepeatButton>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ScrollViewer.Style>
                            <ItemsPresenter x:Name="ItemsPresenter"/>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HighContrast}" Value="False"/>
                                <Condition Binding="{Binding ContextualTabGroup, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="OuterLeftLine" Value="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:RibbonTab}}}"/>
                            <Setter Property="Stroke" TargetName="OuterRightLine" Value="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:RibbonTab}}}"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding HighContrast}" Value="True">
                            <Setter Property="Stroke" TargetName="OuterLeftLine" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            <Setter Property="Stroke" TargetName="OuterRightLine" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>