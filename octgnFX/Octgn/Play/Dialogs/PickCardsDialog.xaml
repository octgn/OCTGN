<UserControl x:Class="Octgn.Play.Dialogs.PickCardsDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ctrl="clr-namespace:Octgn.Controls"
             xmlns:octgn="clr-namespace:Octgn" xmlns:local="clr-namespace:Octgn.Play.Dialogs" x:Name="This" Background="#FF195B8F"
             mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" d:DesignHeight="477" d:DesignWidth="801">
  <UserControl.Resources>
    <local:FilterTemplateSelector x:Key="FilterSelector" />

    <DataTemplate x:Key="CardTemplate">
      <Image HorizontalAlignment="Center" Loaded="SetPicture" MouseEnter="MouseEnterCard" MouseLeave="MouseLeaveCard" />
    </DataTemplate>

    <DataTemplate x:Key="DeckElementTemplate">
      <Grid>
        <Image HorizontalAlignment="Center" Loaded="SetPicture" MouseEnter="MouseEnterCard" MouseLeave="MouseLeaveCard" />

        <Border Margin="0,20,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"
                CornerRadius="5">
          <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="16"
                     FontWeight="Bold" Text="{Binding Quantity, StringFormat=\{0\}x}" />
          <Border.Style>
            <Style TargetType="Border">
              <Setter Property="Background" Value="#80000000" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding Quantity}" Value="1">
                  <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>
        </Border>
      </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="ExpanderButton" TargetType="ToggleButton">
      <Border Background="Transparent" Cursor="Hand">
        <Border BorderThickness="0,0,1,0" BorderBrush="#999999" HorizontalAlignment="Left">
          <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black"
                Data="M 2 0 L 6 4 L 2 8 Z" Width="8" Height="8" Margin="5,2" />
        </Border>
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsChecked" Value="True">
          <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 8 L 8 4 Z" />
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Expander">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="ContentRow" Height="0" />
              </Grid.RowDefinitions>
              <Border Background="#a0ffffff" BorderThickness="0,0,0,1" Padding="0,2,4,2">
                <Border.BorderBrush>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#00999999" Offset="0.1" />
                    <GradientStop Color="#ff999999" Offset="0.25" />
                    <GradientStop Color="#ff999999" Offset="0.75" />
                    <GradientStop Color="#00999999" Offset="0.9" />
                  </LinearGradientBrush>
                </Border.BorderBrush>
                <Grid>
                  <ContentPresenter Margin="25,0,0,0" ContentSource="Header" TextBlock.FontWeight="SemiBold" />
                  <ToggleButton
IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
Template="{StaticResource ExpanderButton}" />
                </Grid>
              </Border>
              <ContentPresenter x:Name="Content" Margin="4,2" Grid.Row="1" />
            </Grid>

            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <DataTemplate x:Key="TextTemplate">
      <Expander Header="{Binding Name, Mode=OneTime}">
        <ItemsControl ItemsSource="{Binding Values}">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Grid Margin="0,1">
                <CheckBox IsChecked="{Binding IsActive, Mode=OneWayToSource}" HorizontalAlignment="Left"
                          Checked="FilterChecked" Unchecked="FilterUnchecked">
                  <TextBlock Text="{Binding Value, Mode=OneTime}" VerticalAlignment="Center" />
                </CheckBox>
                <TextBlock Text="{Binding Count}" HorizontalAlignment="Right" Foreground="#999999"
                           VerticalAlignment="Center" />
              </Grid>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </Expander>
    </DataTemplate>

    <DataTemplate x:Key="IntTemplate">
      <Expander Header="{Binding Name, Mode=OneTime}">
        <TextBlock Foreground="#999999" FontStyle="Italic">
          Integer filters aren't done yet ;-)
        </TextBlock>
      </Expander>
    </DataTemplate>

    <Style x:Key="WrapListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource PanelListBox}">
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
      <Setter Property="ItemContainerStyle">
        <Setter.Value>
          <Style TargetType="ListBoxItem">
            <Setter Property="Padding" Value="3" />
          </Style>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="ListBox" x:Key="CardList" BasedOn="{StaticResource WrapListBox}">
      <Setter Property="ItemTemplate" Value="{StaticResource CardTemplate}" />
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <ctrl:VirtualizingWrapPanel ChildHeight="150" Loaded="ComputeChildWidth" />
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="ListBox" x:Key="DeckElementList" BasedOn="{StaticResource WrapListBox}">
      <Setter Property="ItemTemplate" Value="{StaticResource DeckElementTemplate}" />
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <ctrl:VirtualizingWrapPanel ChildHeight="150" Loaded="ComputeChildWidth" />
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="3*" />
      <ColumnDefinition Width="2*" />
    </Grid.ColumnDefinitions>

    <TabControl Margin="4">
      <TabItem HeaderStringFormat="Card pool ({0})"
               Header="{Binding CardPool.Count, ElementName=This, FallbackValue=0}">
        <Grid>
          <TextBlock Text="Sort:" FontWeight="Bold" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200"
                     Height="20" TextAlignment="Right" Margin="0,2,0,0" />
          <ComboBox x:Name="sortBox"
                    ItemsSource="{Binding AllProperties, Source={x:Static octgn:Database.OpenedGame}, Mode=OneTime}"
                    DisplayMemberPath="Name" SelectionChanged="SortChanged" VerticalAlignment="Top" Margin="204,-2,76.6,0" Height="24" />
          <Border Style="{StaticResource ControlBorder}" Padding="0" Margin="0,26,0,0" HorizontalAlignment="Left"
                  Width="200">
            <ScrollViewer>
              <ItemsControl ItemsSource="{Binding Filters, ElementName=This}"
                            ItemTemplateSelector="{StaticResource FilterSelector}" />
            </ScrollViewer>
          </Border>
          <ListBox x:Name="poolList" Style="{StaticResource CardList}"
                   ItemsSource="{Binding CardPoolView, ElementName=This, Mode=OneTime}" MouseDoubleClick="PickPoolCard"
                   Margin="204,26,0,0" />
        </Grid>
      </TabItem>
      <TabItem Header="Unlimited">
        <ListBox x:Name="unlimitedList" Style="{StaticResource CardList}"
                 ItemsSource="{Binding UnlimitedPoolView, ElementName=This, Mode=OneTime}" MouseDoubleClick="PickUnlimitedCard" />
      </TabItem>
    </TabControl>

    <GridSplitter HorizontalAlignment="Right" Width="4" Background="Transparent" />

    <TabControl x:Name="deckTabs" Grid.Column="1" Margin="0,4,4,4"
                ItemsSource="{Binding LimitedDeck.Sections, ElementName=This, Mode=OneTime}">
      <TabControl.ItemTemplate>
        <DataTemplate>
          <TextBlock>
            <TextBlock.Text>
              <MultiBinding StringFormat="{}{0} ({1})">
                <Binding Path="Name" Mode="OneTime" />
                <Binding Path="CardCount" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </DataTemplate>
      </TabControl.ItemTemplate>
      <TabControl.ContentTemplate>
        <DataTemplate>
          <ListBox Style="{StaticResource DeckElementList}" ItemsSource="{Binding Cards, Mode=OneTime}"
                   MouseDoubleClick="RemoveDeckCard" />
        </DataTemplate>
      </TabControl.ContentTemplate>
    </TabControl>

    <Popup x:Name="quantityPopup" Placement="Mouse" StaysOpen="False" AllowsTransparency="True" Width="170"
           PopupAnimation="Fade">
      <Border CornerRadius="5" BorderThickness="1" BorderBrush="#E0888888" Background="#E0FFFFFF" Margin="8">
        <Border.Effect>
          <DropShadowEffect Opacity="0.4" />
        </Border.Effect>
        <StackPanel Margin="5">
          <TextBlock Text="How many?" Foreground="#333333" FontWeight="Bold" />
          <TextBox x:Name="quantityBox" Text="1" Margin="0,4,0,0" PreviewKeyDown="QuantityBoxPreviewKeyDown"
                   LostFocus="QuantityBoxLostFocus" />
        </StackPanel>
      </Border>
    </Popup>
  </Grid>
</UserControl>