<ctrl:DecorableWindow x:Class="Octgn.Play.PlayWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:octgn="clr-namespace:Octgn" xmlns:play="clr-namespace:Octgn.Play" xmlns:gui="clr-namespace:Octgn.Play.Gui"
        xmlns:ctrl="clr-namespace:Octgn.Controls"
        x:Name="self" Title="Octgn" WindowIcon="pack://application:,,,/OCTGN;component/Resources/Icon.ico"
        Height="800" Width="900" MinHeight="600" MinWidth="800"
        TextOptions.TextFormattingMode="Display" UseLayoutRounding="True"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        RenderOptions.BitmapScalingMode="Fant" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:core="clr-namespace:Octgn.Core;assembly=Octgn.Core"
                  mc:Ignorable="d" 
        >

    <ctrl:DecorableWindow.Resources>
        <play:ValueAdditionConveter x:Key="ValueAdditionConveter"/>
        <Storyboard x:Key="ImageFadeIn">
            <DoubleAnimation To="1" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity" />
        </Storyboard>

        <Storyboard x:Key="ImageFadeOut">
            <DoubleAnimation To="0" Duration="0:0:0.5" Storyboard.TargetProperty="Opacity" />
        </Storyboard>

        <play:CanPlayConverter x:Key="CanPlay" />

        <play:ScaleConverter x:Key="Scale" />
    </ctrl:DecorableWindow.Resources>

    <ctrl:DecorableWindow.CommandBindings>
        <CommandBinding Command="gui:Commands.Quit" Executed="Close" />
        <CommandBinding Command="gui:Commands.LoadDeck" Executed="Open" />
        <CommandBinding Command="gui:Commands.LoadPrebuiltDeck" Executed="OpenPrebuilt" />
        <CommandBinding Command="gui:Commands.LimitedGame" Executed="LimitedGame" />
        <CommandBinding Command="gui:Commands.FullScreen" Executed="ToggleFullScreen" />
        <CommandBinding Command="gui:Commands.ResetGame" Executed="ResetGame" />
        <CommandBinding Command="gui:Commands.ResetScreen" Executed="ResetScreen" />
        <CommandBinding Command="gui:Commands.Chat" Executed="ActivateChat" />
    </ctrl:DecorableWindow.CommandBindings>

    <Grid x:Name="clientArea" Canvas.ZIndex="400" ClipToBounds="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" x:Name="menuRow" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5*" x:Name="mainRow" MinHeight="100" />
            <RowDefinition Height="5" />
            <RowDefinition Height="2*" x:Name="playerArea"/>
        </Grid.RowDefinitions>
        <Menu x:Name="Menu" Canvas.ZIndex="4">
            <MenuItem Header="Game">
                <MenuItem Header="Load Deck" Command="gui:Commands.LoadDeck" IsEnabled="{Binding Source={x:Static octgn:Program.GameEngine},Path=Spectator, Converter={StaticResource BooleanInverterConverter}}"/>
                <MenuItem Header="Load Pre-Built Deck" Command="gui:Commands.LoadPrebuiltDeck" x:Name="PrebuiltDeckMenuItem" IsEnabled="{Binding Source={x:Static octgn:Program.GameEngine},Path=Spectator, Converter={StaticResource BooleanInverterConverter}}"/>
                <MenuItem Header="Save Deck" Click="LimitedSaveClicked" IsEnabled="{Binding Source={x:Static octgn:Program.GameEngine},Path=Spectator, Converter={StaticResource BooleanInverterConverter}}"/>
                <MenuItem Header="Limited Game" Command="gui:Commands.LimitedGame" x:Name="LimitedGameMenuItem" IsEnabled="{Binding Source={x:Static octgn:Program.GameEngine},Path=Spectator, Converter={StaticResource BooleanInverterConverter}}"/>
                <Separator></Separator>
                <MenuItem Header="Full Game Log" Click="ShowGameLog"/>
                <Separator></Separator>
                <MenuItem Header="Fullscreen" Command="gui:Commands.FullScreen" IsChecked="{Binding IsFullScreen, ElementName=self, Mode=OneWay}"/>
                <MenuItem Header="Reset" Command="gui:Commands.ResetGame" IsEnabled="{Binding Source={x:Static octgn:Program.GameEngine},Path=Spectator, Converter={StaticResource BooleanInverterConverter}}"/>
                <MenuItem Header="Quit" Command="gui:Commands.Quit"/>
            </MenuItem>
            <MenuItem Header="Game Documents" DataContext="{Binding Definition}" ItemsSource="{Binding Documents}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <MenuItem DataContext="{Binding}" Header="{Binding Name}" Click="KillJoshJohnson"></MenuItem>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>
            <MenuItem Header="Options">
                <MenuItem Header="Change Background">
                    <MenuItem Header="From File..." Click="MenuChangeBackgroundFromFileClick"></MenuItem>
                    <MenuItem Header="Reset" Click="MenuChangeBackgroundReset"></MenuItem>
                </MenuItem>
                <MenuItem Header="Reset Screen Position" Command="gui:Commands.ResetScreen" />
                <!--<MenuItem Header="Enable Game Scripts" IsCheckable="True" IsChecked="{Binding ElementName=self,Path=EnableGameScripts}"/>-->
            </MenuItem>
            <MenuItem Header="Host Options" Visibility="{Binding ElementName=self,Path=IsHost,Converter={StaticResource BooleanToVisibilityConverter}}">
                <MenuItem Header="Kick Player" DataContext="{x:Static play:Player.AllExceptGlobal}" ItemsSource="{Binding}">
                    <MenuItem.ItemTemplate>
                        <DataTemplate DataType="play:Player">
                            <MenuItem Header="{Binding Name}" Click="KickPlayer" IsEnabled="{Binding CanKick}"/>
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                </MenuItem>
                <MenuItem Header="Kick Spectator" DataContext="{x:Static play:Player.Spectators}" ItemsSource="{Binding}">
                    <MenuItem.ItemTemplate>
                        <DataTemplate DataType="play:Player">
                            <MenuItem Header="{Binding Name}" Click="KickPlayer"></MenuItem>
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                </MenuItem>
                <MenuItem Header="Mute Spectators" IsCheckable="True" IsChecked="{Binding Path=GameSettings.MuteSpectators,ElementName=self, Mode=TwoWay}">

                </MenuItem>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About Octgn" Click="ShowAboutWindow" />
                <MenuItem Header="Console" Click="ConsoleClicked" Visibility="Collapsed" x:Name="MenuConsole"/>
                <Separator></Separator>
            </MenuItem>
        </Menu>

        <ctrl:PreGameLobby x:Name="PreGameLobby" Grid.RowSpan="6" Grid.ColumnSpan="6" Grid.Row="0" Background="#AAFFFFFF" Canvas.ZIndex="500" d:IsHidden="True"/>

        <Border Grid.RowSpan="5" Grid.ColumnSpan="5" d:IsHidden="True"
                Background="{StaticResource TransControlBackgroundBrush}"
                Canvas.ZIndex="55"
                Visibility="{Binding Source={x:Static octgn:Program.GameEngine}, Path=IsConnected, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
            <Border  VerticalAlignment="Center" HorizontalAlignment="Center"
                 Background="{StaticResource TransControlBackgroundBrush}"
                 Padding="10"
                 CornerRadius="5"
                 Canvas.ZIndex="55"
                 >
                <StackPanel>
                    <TextBlock Foreground="White" FontSize="24" TextWrapping="Wrap">You have been disconnected from the game.</TextBlock>
                    <TextBlock Foreground="White" FontSize="16">Please wait while we reconnect you...</TextBlock>
                    <Grid Height="10"/>
                    <Button Content="Cancel" Width="70" Height="30" HorizontalAlignment="Right" Click="ButtonWaitingForPlayersCancel" Style="{StaticResource FlatDarkRedButtonStyle}"/>
                </StackPanel>
            </Border>

        </Border>

        <Border Grid.RowSpan="5" Grid.ColumnSpan="5" d:IsHidden="True"
                Background="{StaticResource TransControlBackgroundBrush}"
                Canvas.ZIndex="50"
                DataContext="{x:Static play:Player.LocalPlayer}"
                x:Name="WaitBorder"
                Visibility="{Binding Path=WaitingOnPlayers,Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Style="{StaticResource DarkPanel}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Padding="10">
                <StackPanel>
                    <TextBlock>Waiting for Other Users</TextBlock>
                    <Grid Height="5"/>
                    <Rectangle Height="1" Fill="DarkGray"></Rectangle>
                    <Grid Height="5"/>
                    <ItemsControl DataContext="{x:Static play:Player.AllExceptGlobal}" ItemsSource="{Binding Mode=OneWay}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"></StackPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image>
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Ready}" Value="False">
                                                        <Setter Property="Source" Value="/Resources/orangebullet.png"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Ready}" Value="True">
                                                        <Setter Property="Source" Value="/Resources/greenbullet.png"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <Grid Width="5"/>
                                    <TextBlock Text="{Binding Name}" Style="{StaticResource PanelText}"/>
                                    <Grid Width="5"/>
                                    <Button Content="Kick" Padding="10 5" Visibility="{Binding CanKick,Converter={StaticResource BooleanToVisibilityConverter}}" Click="KickPlayer" />
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Grid Height="10"/>
                    <Button Content="Cancel" Width="70" Height="30" HorizontalAlignment="Right" Click="ButtonWaitingForPlayersCancel" Style="{StaticResource FlatDarkRedButtonStyle}"/>
                </StackPanel>
            </Border>
        </Border>

        <Border Grid.RowSpan="2" Grid.Row="1" Canvas.ZIndex="400" x:Name="ChatLayer" Background="{x:Null}" >
            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="330"/>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="BottomBar"  Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Top" Height="25" 
                        Margin="0 -25 0 0">
                    <Border.Resources>
                        <Storyboard x:Key="ShowBottomBar" TargetName="BottomBar">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0 -25 0 0" To="0 0 0 0" Duration="00:00:00.500"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.500"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" BeginTime="0:0:10.0" Duration="0:0:0.500"/>
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0 0 0 0" To="0 -25 0 0" BeginTime="0:0:10.0"  Duration="00:00:00.500"/>
                        </Storyboard>
                    </Border.Resources>
                    <Border.Style>
                        <Style BasedOn="{StaticResource DarkPanel}" TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="{StaticResource SidewaysGameMessageBack}"/>
                        </Style>
                    </Border.Style>
                    <ItemsControl ItemsSource="{Binding ElementName=self,Path=GameMessages}" ClipToBounds="false">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <play:GameMessageTextBlock GameMessage="{Binding}" TextWrapping="Wrap" TextOptions.TextRenderingMode="Aliased">
                                    <play:GameMessageTextBlock.Resources>
                                        <Storyboard x:Key="zoomIn">
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.500"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0" To="1.2" Duration="0:0:0.150"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From="0" To="1.2" Duration="0:0:0.150" />
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="1.2" To=".85" Duration="0:0:0.200" BeginTime="0:0:0.150"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From="1.2" To=".85" Duration="0:0:0.200" BeginTime="0:0:0.150"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From=".85" To="1" Duration="0:0:0.150" BeginTime="0:0:0.350">
                                                <DoubleAnimation.EasingFunction>
                                                    <BounceEase Bounces="10" Bounciness="20"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From=".85" To="1" Duration="0:0:0.150" BeginTime="0:0:0.350">
                                                <DoubleAnimation.EasingFunction>
                                                    <BounceEase Bounces="10" Bounciness="20"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </play:GameMessageTextBlock.Resources>
                                    <!--<TextBlock.Effect>
                                        <DropShadowEffect BlurRadius="2" Color="White" ShadowDepth="0" Opacity="1" Direction="0"/>
                                    </TextBlock.Effect>-->
                                    <play:GameMessageTextBlock.RenderTransform>
                                        <ScaleTransform ScaleX="0" ScaleY="0" CenterX="50" CenterY="0"/>
                                    </play:GameMessageTextBlock.RenderTransform>
                                    <play:GameMessageTextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard Storyboard="{StaticResource zoomIn}"/>
                                                </EventTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </play:GameMessageTextBlock.Style>
                                </play:GameMessageTextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>
            </Grid>
        </Border>

        <Border Grid.Column="0" Grid.Row="2" Canvas.ZIndex="5" HorizontalAlignment="Left" VerticalAlignment="Stretch">
            <Border.Resources>
                <Storyboard x:Key="ShowPlayersStoryboard">
                    <DoubleAnimation Storyboard.TargetName="ShowPlayersIcon" Storyboard.TargetProperty="Opacity" From="0.5" To="1.0" Duration="0:0:0.250"/>
                    <ThicknessAnimation Storyboard.TargetName="PlayerListBorder" Storyboard.TargetProperty="Margin" From="35 -200 0 0" To="35 0 0 0" Duration="0:0:0.250"/>
                    <DoubleAnimation Storyboard.TargetName="PlayerListBorder" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.250"/>
                </Storyboard>
                <Storyboard x:Key="HidePlayersStoryboard">
                    <DoubleAnimation Storyboard.TargetName="ShowPlayersIcon" Storyboard.TargetProperty="Opacity" From="1.0" To="0.5" Duration="0:0:0.250"/>
                    <ThicknessAnimation Storyboard.TargetName="PlayerListBorder" Storyboard.TargetProperty="Margin" From="35 0 0 0" To="35 -200 0 0" Duration="0:0:0.250"/>
                    <DoubleAnimation Storyboard.TargetName="PlayerListBorder" Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:0.250"/>
                </Storyboard>
            </Border.Resources>
            <StackPanel>
                <Image Source="../Resources/people.png" Width="32" Cursor="Hand" Opacity=".5" x:Name="ShowPlayersIcon">
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="Image.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource ShowPlayersStoryboard}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Image.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource HidePlayersStoryboard}"/>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>
            </StackPanel>
        </Border>

        <Border x:Name="PlayerListBorder" Grid.Column="0" Grid.Row="2" Canvas.ZIndex="3"  
                HorizontalAlignment="Left" VerticalAlignment="Top" Margin="35 -200 0 0" Style="{StaticResource DarkPanel}" Background="Gainsboro" Padding="10 5 10 5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="11"/>
                    <RowDefinition Height="100*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Players" Grid.Row="0" Grid.Column="0" Foreground="Blue"/>
                <TextBlock Text="Spectators" Grid.Row="0" Grid.Column="2" Foreground="Blue"/>
                <Rectangle Fill="GhostWhite" Height="1" Grid.Row="1" Grid.ColumnSpan="3" Grid.Column="0" Margin="0 5"/>
                <ItemsControl Grid.Row="2" Grid.Column="0" ItemsSource="{x:Static play:Player.AllExceptGlobal}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" Foreground="{Binding Color}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ItemsControl Grid.Row="2" Grid.Column="2" ItemsSource="{x:Static play:Player.Spectators}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" Foreground="{Binding Color}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Border>

        <Border x:Name="PhaseControl" Grid.Column="0" Grid.Row="2" Canvas.ZIndex="3" HorizontalAlignment="Right">
            <Border.Resources>
                <Storyboard x:Key="ShowPhaseStoryboard">
                    <DoubleAnimation Storyboard.TargetName="PhaseToolBar" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.250"/>
                    <DoubleAnimation Storyboard.TargetName="PhaseListBorder" Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.250"/>
                    <DoubleAnimation Storyboard.TargetName="PhaseListBorder" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.250"/>
                </Storyboard>
                <Storyboard x:Key="HidePhaseStoryboard">
                    <DoubleAnimation Storyboard.TargetName="PhaseToolBar" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.250"/>
                    <DoubleAnimation Storyboard.TargetName="PhaseListBorder" Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleX)" To="0" Duration="0:0:0.250"/>
                    <DoubleAnimation Storyboard.TargetName="PhaseListBorder" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.250"/>
                </Storyboard>
            </Border.Resources>
            <StackPanel MouseEnter="ShowPhaseStoryboard" MouseLeave="HidePhaseStoryboard" >
                <Border x:Name="PhaseToolBar" HorizontalAlignment="Right" BorderThickness="2" Cursor="Hand" MinWidth="100" Height="45" Opacity="0.5"
                        BorderBrush="{StaticResource GlassPanelBorder}" Background="{StaticResource GlassPanelBrush}" DataContext="{Binding Source={x:Static octgn:Program.GameEngine}}"
                        MouseLeftButtonUp="LockPhaseStoryboard">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Style="{StaticResource PanelText}" Padding="5,2,5,0" HorizontalAlignment="Right" VerticalAlignment="Top"  >
                            <Run Text="Turn" />
                            <Run Text="{Binding TurnNumber}" />
                            <Run Text=":" />
                            <Run Text="{Binding TurnPlayer.Name}" Foreground="{Binding TurnPlayer.Color}" />
                        </TextBlock>
                        <TextBlock Style="{StaticResource PanelText}" Padding="5,0,5,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Text="{Binding CurrentPhase.Name}" />
                    </StackPanel>
                </Border>
                <Border x:Name="PhaseListBorder" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Border.LayoutTransform>
                        <ScaleTransform ScaleX="0"/>
                    </Border.LayoutTransform>
                    <ItemsControl DataContext="{x:Static octgn:Program.GameEngine}" ItemsSource="{Binding AllPhases}" Grid.IsSharedSizeScope="True" >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <TextBlock Text="{Binding Name}" Visibility="{Binding IsMouseOver, ElementName=PhaseButton, Converter={StaticResource BooleanToVisibilityHiddenConverter}}" 
                                          Background="#444444" Foreground="WhiteSmoke" FontWeight="Bold" VerticalAlignment="Center" />
                                    <Button x:Name="PhaseButton" Click="PhaseClicked" Focusable="False" BorderThickness="3" Background="Black" >
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Hold}" Value="True">
                                                        <Setter Property="BorderBrush" Value="Yellow" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Image Source="{Binding Icon}" HorizontalAlignment="Right">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsActive}" Value="False">
                                                            <Setter Property="Opacity" Value="0.5"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>
            </StackPanel>
        </Border>

        <StackPanel Grid.Row="1" x:Name="LimitedBackstage" Visibility="Collapsed" Background="#333">
            <Border Padding="10,5,10,5">
                <StackPanel Orientation="Horizontal">
                    <Button Padding="10,5,10,5" Margin="0,0,10,0" Click="LimitedOkClicked">
                        <StackPanel>
                            <Image Source="/Resources/Icons/Ok.png" Width="32"/>
                            <TextBlock Text="Load Cards"></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Padding="10,5,10,5" Margin="0,0,10,0" Click="LimitedCancelClicked">
                        <StackPanel>
                            <Image Source="/Resources/Icons/Quit.png" Width="32"/>
                            <TextBlock Text="Cancel"></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Padding="10,5,10,5" Margin="0,0,10,0" Click="LimitedSaveClicked">
                        <StackPanel>
                            <Image Source="/Resources/Icons/Save.png" Width="32"/>
                            <TextBlock Text="Save Deck"></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Padding="10,5,10,5" Margin="0,0,10,0" Click="LimitedLoadCardPool">
                        <StackPanel>
                            <Image Source="/Resources/Icons/LoadLimited.png" Width="32"/>
                            <TextBlock Text="Load CardPool"></TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Padding="10,5,10,5" Margin="0,0,10,0" Click="LimitedAddPacks">
                        <StackPanel>
                            <Image Source="/Resources/Icons/cards.png" Width="32"/>
                            <TextBlock Text="Add Pack(s)"></TextBlock>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Border>
        </StackPanel>
        <!--<ctrl:SubscribeMessage Grid.RowSpan="5" Canvas.ZIndex="10" Visibility="Collapsed" x:Name="SubscribeMessage"/>-->
        <Border x:Name="TableHolder" Grid.Row="2" Grid.RowSpan="1" />
        <!--<gui:TableControl Grid.Row="2" Grid.RowSpan="1"  
                          x:Name="table" DataContext="{Binding Table}" 
                          KeyboardNavigation.IsTabStop="True"
                      KeyboardNavigation.TabNavigation="Contained"/>-->
        <ctrl:ChildWindowManager x:Name="wndManager" Grid.Row="1" Grid.RowSpan="4" Panel.ZIndex="53" />
        <Decorator Grid.Row="2"  x:Name="backstage" Visibility="Collapsed"/>
        <Decorator x:Name="outerCardViewer" Grid.Row="2" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Stretch"
               Opacity="0" IsHitTestVisible="False" Panel.ZIndex="54">
            <Decorator.Effect>
                <DropShadowEffect Opacity="0.5" ShadowDepth="8" BlurRadius="6" />
            </Decorator.Effect>
            <Image x:Name="cardViewer" HorizontalAlignment="Left" Stretch="Uniform" VerticalAlignment="Top"
             MaxHeight="{Binding ElementName=outerCardViewer, Path=ActualHeight, Converter={StaticResource Scale}, ConverterParameter=0.85}" 
             MaxWidth="{Binding ElementName=clientArea, Path=ActualWidth, Converter={StaticResource Scale}, ConverterParameter=0.40}" 
                   />
        </Decorator>
        <Decorator x:Name="outerCardViewer2" Grid.Row="2" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Stretch"
               Opacity="0" IsHitTestVisible="False" Panel.ZIndex="54">
            <Decorator.Effect>
                <DropShadowEffect Opacity="0.5" ShadowDepth="8" BlurRadius="6" />
            </Decorator.Effect>
            <Image x:Name="cardViewer2" HorizontalAlignment="Left" Stretch="Uniform" VerticalAlignment="Top"
             MaxHeight="{Binding ElementName=outerCardViewer2, Path=ActualHeight, Converter={StaticResource Scale}, ConverterParameter=0.85}" 
             MaxWidth="{Binding ElementName=clientArea, Path=ActualWidth, Converter={StaticResource Scale}, ConverterParameter=0.40}" 
			 />
        </Decorator>

        <Grid x:Name="chatGrid" Grid.Row="2" Grid.RowSpan="3" ZIndex="5" Width="300" HorizontalAlignment="Left" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="100*" x:Name="ChatGridEmptyPart"/>
                <RowDefinition Height="5"/>
                <RowDefinition x:Name="ChatGridChatPart" 
                               MinHeight="{Binding ActualHeight, ConverterParameter=4, Converter={StaticResource ValueAdditionConveter}, ElementName=playerTabs, Mode=OneWay}"/>
            </Grid.RowDefinitions>
            <GridSplitter Grid.Row="1" x:Name="ChatSplit" MouseDoubleClick="ChatSplitDoubleClick"  Height="5" Width="auto" HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom" ResizeBehavior="PreviousAndNext" Cursor="SizeNS"  ResizeDirection="Rows" 
                          ShowsPreview="False" Visibility="Visible" DragDelta="ChatSplit_DragDelta">
                <GridSplitter.Template>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Grid Background="#55333333" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                                <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                                <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                                <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                                <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                            </StackPanel>
                        </Grid>
                    </ControlTemplate>
                </GridSplitter.Template>
            </GridSplitter>
            <Border Margin="0,0,0,2" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <gui:ChatControl x:Name="chat" DockPanel.Dock="Left" DisplayKeyboardShortcut="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#55333333"
                                 IsEnabled="{Binding ElementName=self,Path=CanChat}"/>
            </Border>
        </Grid>
        <GridSplitter Grid.Row="3" x:Name="playerAreaGridSplitter" VerticalAlignment="Center" Height="5" HorizontalAlignment="Stretch" ResizeDirection="Rows" 
                          DragDelta="GridSplitter_DragDelta" Margin="300,0,0,0">
            <GridSplitter.Template>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Background="#55333333" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                            <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                            <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                            <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                            <Image Source="pack://application:,,,/OCTGN;component/Resources/greybullet.png" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </GridSplitter.Template>
        </GridSplitter>
        <Grid Grid.Row="4" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TabControl x:Name="playerTabs" Margin="0,2,2,2" Padding="0" Grid.Column="1"  Background="#55333333" 
                        Style="{x:Null}" BorderThickness="0" DataContext="{x:Static play:Player.All}" ItemsSource="{Binding}" SelectedItem="{x:Static play:Player.LocalPlayer}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Margin="0">
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Focusable="False" />
                            <TextBlock VerticalAlignment="Center" Focusable="False" Margin="5,0,0,0" FontWeight="Normal"
                         FontSize="11" Initialized="InitializePlayerSummary" />
                            <Button VerticalAlignment="Center" Click="NextTurnClicked" Focusable="False" Margin="5,0,-8,0"
                                          IsEnabled="{Binding Source={x:Static octgn:Program.GameEngine},Path=Spectator, Converter={StaticResource BooleanInverterConverter}}">
                                <Button.Style>
                                    <MultiBinding Converter="{StaticResource CanPlay}">
                                        <Binding Source="{x:Static octgn:Program.GameEngine}" Path="TurnPlayer" />
                                        <Binding />
                                        <Binding Source="{x:Static octgn:Program.GameEngine}" Path="StopTurn" />
                                    </MultiBinding>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <gui:PlayerControl />
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </Grid>


    </Grid>
</ctrl:DecorableWindow>
