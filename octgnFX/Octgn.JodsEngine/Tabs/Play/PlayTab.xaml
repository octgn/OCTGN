<UserControl x:Class="Octgn.Tabs.Play.PlayTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Octgn.Controls"
             xmlns:utils="clr-namespace:Octgn.Utils"
             xmlns:local="clr-namespace:Octgn.Tabs.Play"
             xmlns:toggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="870"
             x:Name="Me">
    <UserControl.Resources>
        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}"
               BasedOn="{StaticResource {x:Type ListViewItem}}">
            <EventSetter Event="MouseDoubleClick" Handler="GameListItemDoubleClick"/>
            <Setter Property="Visibility" Value="{Binding Path=Visible,Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Style>
        <Style x:Key="{x:Type toggleSwitch:HorizontalToggleSwitch}" TargetType="{x:Type toggleSwitch:HorizontalToggleSwitch}">
            <Setter Property="Background" Value="#FF1F1F1F"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="UncheckedBackground" Value="#FF333430"/>
            <Setter Property="UncheckedForeground" Value="#FF999999"/>
            <Setter Property="ThumbSize" Value="38"/>
            <Setter Property="Margin" Value="5 0 0 0"/>
            <Setter Property="CheckedBackground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF3EB3EC"/>
                        <GradientStop Color="#FF349BE6" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="ThumbBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF4D4E48"/>
                        <GradientStop Color="#FF333430" Offset="1"/>
                        <GradientStop Color="#FF333330" Offset="0.021"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="497*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Border x:Name="DialogPlaceHolder" Grid.RowSpan="3" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Panel.ZIndex="10"></Border>
        <Border x:Name="BorderButtons" Style="{StaticResource ButtonBarPanel}" Grid.Row="0" Grid.Column="0">
            <DockPanel>
                <Border DockPanel.Dock="Right" Height="35">
                    <Border Padding="5,0,5,0" CornerRadius="5" Background="#dd333333" Visibility="Visible">
                        <Grid Margin="10 1 10 5">
                            <Label HorizontalAlignment="Center" FontSize="8"
                                   Content="{Binding GameCount, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PlayTab}}}"
                                   />
                            <Label Content="Games" FontSize="12"
                                   FontWeight="Bold"
                                   Margin="0 15 0 0"/>
                        </Grid>
                    </Border>
                </Border>
                <WrapPanel DockPanel.Dock="Left" Orientation="Horizontal">
                    <!--<Button Click="ButtonRefreshClick" Width="35" Height="30" Margin="0,0,5,0" FontSize="35" Padding="0 -6 0 0"
                        Style="{StaticResource FlatDarkOrangeButtonStyle}" x:Name="ButtonRefresh"
                        FontFamily="{StaticResource Entypo}" ToolTip="Refresh Game List">&#10227;</Button>-->
                    <Button Click="ButtonHostClick" Content="Start" MinWidth="80" Height="34" Margin="0,0,5,0" Style="{StaticResource FlatDarkGreenButtonStyle}"></Button>
                    <Button Click="ButtonJoinClick" Content="Join" MinWidth="80" Height="34" Margin="0,0,5,0" Style="{StaticResource FlatDarkButtonStyle}"
                        IsEnabled="{Binding IsJoinableGameSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PlayTab}}}"/>
                    <Button Click="ButtonJoinOfflineGame" Content="Join Unlisted" MinWidth="80" Padding="5,0"
                        Height="34" Margin="0,0,0,0" Style="{StaticResource FlatDarkButtonStyle}"></Button>
                    <toggleSwitch:HorizontalToggleSwitch Width="220" Height="34" IsChecked="{Binding ElementName=Me,Path=ShowUninstalledGames, Mode=TwoWay,NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}">
                        <toggleSwitch:HorizontalToggleSwitch.CheckedContent>
                            <TextBlock Text="Show Uninstalled Games" TextWrapping="Wrap"></TextBlock>
                        </toggleSwitch:HorizontalToggleSwitch.CheckedContent>
                        <toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                            <TextBlock Text="Hide Uninstalled Games" TextWrapping="Wrap"></TextBlock>
                        </toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                    </toggleSwitch:HorizontalToggleSwitch>
                    <toggleSwitch:HorizontalToggleSwitch Width="200" Height="34" IsChecked="{Binding ElementName=Me,Path=Spectate, Mode=TwoWay}">
                        <toggleSwitch:HorizontalToggleSwitch.CheckedContent>
                            <TextBlock Text="Spectate" TextWrapping="Wrap"></TextBlock>
                        </toggleSwitch:HorizontalToggleSwitch.CheckedContent>
                        <toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                            <TextBlock Text="Play" TextWrapping="Wrap"></TextBlock>
                        </toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                    </toggleSwitch:HorizontalToggleSwitch>
                    <Grid Width="6"></Grid>
                    <Button Click="ButtonKillGame" Content="Kill Game" MinWidth="80" Padding="5,0"
                        Height="30" Margin="0,0,0,0" Style="{StaticResource FlatDarkRedButtonStyle}"
                        Visibility="{Binding ElementName=Me,Path=ShowKillGameButton,Converter={StaticResource BooleanToVisibilityConverter}}"
                        />
                </WrapPanel>
            </DockPanel>
        </Border>
        <ProgressBar Grid.Row="1" Grid.Column="0" Height="4" IsIndeterminate="{Binding ElementName=Me,Path=IsRefreshingGameList}" Maximum="200" Minimum="0" Foreground="CornflowerBlue">
            <ProgressBar.Style>
                <Style TargetType="{x:Type ProgressBar}">
                    <Style.Resources>
                        <Storyboard x:Key="InitialRefreshDelayAnimation">
                            <DoubleAnimation From="200" To="0" Storyboard.TargetProperty="Value" Duration="{x:Static local:PlayTab.InitialRefreshDelay}" />
                        </Storyboard>
                        <Storyboard x:Key="NormalRefreshDelayAnimation">
                            <DoubleAnimation From="200" To="0" Storyboard.TargetProperty="Value" Duration="{x:Static local:PlayTab.NormalRefreshDelay}" />
                        </Storyboard>
                    </Style.Resources>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=Me, Path=IsRefreshingGameList}" Value="False"/>
                                <Condition Binding="{Binding ElementName=Me, Path=IsInitialRefresh}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="InitialRefreshDelayBeginStoryboard" Storyboard="{StaticResource InitialRefreshDelayAnimation}"/>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="InitialRefreshDelayBeginStoryboard"/>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=Me, Path=IsRefreshingGameList}" Value="False"/>
                                <Condition Binding="{Binding ElementName=Me, Path=IsInitialRefresh}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="NormalRefreshDelayBeginStoryboard" Storyboard="{StaticResource NormalRefreshDelayAnimation}"/>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="NormalRefreshDelayBeginStoryboard"/>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=Me, Path=IsRefreshingGameList}" Value="False">
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ProgressBar.Style>
        </ProgressBar>
        <ListView x:Name="ListViewGameList" Grid.Row="2"
                  SelectionChanged="ListViewGameListSelectionChanged"
                  ItemsSource="{Binding HostedGameList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PlayTab}}}"
                  ItemContainerStyle="{StaticResource ListViewItemStyle}"
                  IsSynchronizedWithCurrentItem="True"
                  utils:GridViewSort.AutoSort="True"
                  Grid.RowSpan="3"
                  SelectionMode="Single"
                  AlternationCount="1">
            <ListView.Resources>
                <DataTemplate x:Key="IconTemplate">
                    <Image Source="/OCTGN;component/Resources/lock.png"
                           Stretch="UniformToFill"
                           Height="16"
                           Visibility="{Binding Path=HasPassword,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTemplate>
                <DataTemplate x:Key="UserIconTemplate">
                    <Image Source="{Binding Path=UserImage}"
                           Stretch="UniformToFill"
                           Height="16" Width="16" Margin="0"/>
                </DataTemplate>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn CellTemplate="{StaticResource UserIconTemplate}" Width="35"></GridViewColumn>
                    <GridViewColumn CellTemplate="{StaticResource IconTemplate}" Width="25"></GridViewColumn>
                    <GridViewColumn Header="User"
                                    utils:GridViewSort.PropertyName="UserName"
                                    DisplayMemberBinding="{Binding Path=UserName}" Width="100"></GridViewColumn>
                    <GridViewColumn Header="Game"
                                    utils:GridViewSort.PropertyName="GameName"
                                    DisplayMemberBinding="{Binding Path=GameName}" Width="220"></GridViewColumn>
                    <GridViewColumn Header="Name"
                                    utils:GridViewSort.PropertyName="Name"
                                    DisplayMemberBinding="{Binding Path=Name}" Width="300"></GridViewColumn>
                    <!--<GridViewColumn Header="Status"
                                    utils:GridViewSort.PropertyName="Status"
                                    DisplayMemberBinding="{Binding Path=Status}" Width="100"></GridViewColumn>-->
                    <!--<GridViewColumn Header="Source"
                                    utils:GridViewSort.PropertyName="Source"
                                    DisplayMemberBinding="{Binding Path=GameSource}" Width="50"></GridViewColumn>-->
                    <!--<GridViewColumn Header="Version"
                                    utils:GridViewSort.PropertyName="GameVersion"
                                    DisplayMemberBinding="{Binding Path=GameVersion}" Width="75"></GridViewColumn>-->
                    <!--<GridViewColumn Header="StartTime"
                                    utils:GridViewSort.PropertyName="StartTime"
                                    DisplayMemberBinding="{Binding Path=StartTime}"></GridViewColumn>-->
                    <GridViewColumn Header="RunTime"
                                    utils:GridViewSort.PropertyName="StartTime"
                                    DisplayMemberBinding="{Binding Path=RunTime}" Width="100"></GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <!--<TextBlock x:Name="RefreshMessage" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center"
                   Foreground="White" Background="{x:Null}" FontSize="20">
            Press the orange refresh button to fetch the game list.
        </TextBlock>-->
    </Grid>
</UserControl>
