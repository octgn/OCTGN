<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!--<Style TargetType="Button" x:Key="{x:Type Button}">
    <Setter Property="Foreground" Value="White" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="Trebuchet MS" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="Lightup">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="fillRec"
                                            Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF0091D3" />
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="fillRec"
                                            Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF413BA1" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Lightdown">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="fillRec"
                                            Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF001DDA" />
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="fillRec"
                                            Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF32467C" />
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Rectangle Stroke="#FF707ABB" RadiusX="5" RadiusY="5" HorizontalAlignment="Stretch" Width="Auto"
                       x:Name="fillRec">
              <Rectangle.Fill>
                <RadialGradientBrush>
                  <RadialGradientBrush.RelativeTransform>
                    <TranslateTransform X="0" Y="0.5" />
                  </RadialGradientBrush.RelativeTransform>
                  <GradientStop Color="#FF001DDA" Offset="0" />
                  <GradientStop Color="#FF32467C" Offset="1" />
                </RadialGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle RadiusX="5" RadiusY="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"
                       Height="Auto" x:Name="highlight">
              <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.50,0" StartPoint="0.5,1">
                  <GradientStop Color="#7E00BAFF" Offset="1" />
                  <GradientStop Color="#3F00BAFF" Offset="0.668" />
                  <GradientStop Color="#00FFFFFF" Offset="0.656" />
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Fill" TargetName="fillRec">
                <Setter.Value>
                  <RadialGradientBrush>
                    <RadialGradientBrush.RelativeTransform>
                      <TranslateTransform X="0" Y="0.5" />
                    </RadialGradientBrush.RelativeTransform>
                    <GradientStop Color="#FF6E6E6E" Offset="0" />
                    <GradientStop Color="#FF494949" Offset="1" />
                  </RadialGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Foreground" Value="#FF000000" />
              <Setter Property="Stroke" TargetName="fillRec" Value="#FF000000" />
              <Setter Property="Fill" TargetName="highlight">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                    <GradientStop Color="#00FFFFFF" Offset="0.644" />
                    <GradientStop Color="#73FFFFFF" Offset="1" />
                    <GradientStop Color="#4BCECECE" Offset="0.668" />
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource Lightup}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource Lightdown}" />
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource Lightup}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource Lightdown}" />
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="RenderTransform" TargetName="contentPresenter">
                <Setter.Value>
                  <TranslateTransform Y="2" />
                </Setter.Value>
              </Setter>
              <Setter Property="Stroke" TargetName="fillRec">
                <Setter.Value>
                  <LinearGradientBrush EndPoint="0.504,1.01" StartPoint="0.501,-0.01">
                    <GradientStop Color="#FF022072" Offset="0" />
                    <GradientStop Color="#FF5F98E1" Offset="1" />
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->

    <Style x:Key="PlayButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="fillRec" Padding="4,2,4,2" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                        <Path Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Stroke="#FF248D04"
							Data="F1 M 307.547,210.667C 307.547,206.384 252.44,174.307 249.56,177.188C 246.679,180.068 246.208,240.793 249.56,244.146C 252.912,247.498 307.547,214.95 307.547,210.667 Z "
							Width="14" Height="14">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0.365499,0.0151389" EndPoint="0.365499,0.983208">
                                    <GradientStop Color="#FF37E104" Offset="0" />
                                    <GradientStop Color="#FF33BB0A" Offset="0.726027" />
                                    <GradientStop Color="#FF2F9610" Offset="1" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="fillRec" Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.513,1.203" StartPoint="0.487,-0.203">
                                        <GradientStop Color="#FFAECDE6" Offset="0" />
                                        <GradientStop Color="#FF7297B7" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.479,1.202" StartPoint="0.521,-0.202">
                                        <GradientStop Color="#4FABD9EA" Offset="1" />
                                        <GradientStop Color="#4FD2E7F0" Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.504,1.01" StartPoint="0.501,-0.01">
                                        <GradientStop Color="#FF153899" Offset="0" />
                                        <GradientStop Color="#FF669CE4" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.491,1.203" StartPoint="0.509,-0.203">
                                        <GradientStop Color="#7F6F85EC" Offset="0.005" />
                                        <GradientStop Color="#BF5B6EC5" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PauseButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="fillRec" Padding="4,2,4,2" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                        <Path Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Stroke="#FFE3B603"
							Data="F1 M 249.972,176.967L 267.139,176.967C 268.795,176.967 270.139,178.31 270.139,179.967L 270.139,241.3C 270.139,242.957 268.795,244.3 267.139,244.3L 249.972,244.3C 248.315,244.3 246.972,242.957 246.972,241.3L 246.972,179.967C 246.972,178.31 248.315,176.967 249.972,176.967 Z M 288.13,176.967L 305.297,176.967C 306.954,176.967 308.297,178.31 308.297,179.967L 308.297,241.3C 308.297,242.957 306.954,244.3 305.297,244.3L 288.13,244.3C 286.474,244.3 285.13,242.957 285.13,241.3L 285.13,179.967C 285.13,178.31 286.474,176.967 288.13,176.967 Z "
							Width="14" Height="14">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0.360512,0.0260379" EndPoint="1.35835,0.0260379">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <SkewTransform CenterX="0.360512" CenterY="0.0260379" AngleX="-2.47444" AngleY="0" />
                                            <RotateTransform CenterX="0.360512" CenterY="0.0260379" Angle="74.4977" />
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FFFFFC2D" Offset="0" />
                                    <GradientStop Color="#FFF7D816" Offset="0.60274" />
                                    <GradientStop Color="#FFEFB400" Offset="1" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="fillRec" Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.513,1.203" StartPoint="0.487,-0.203">
                                        <GradientStop Color="#FFAECDE6" Offset="0" />
                                        <GradientStop Color="#FF7297B7" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.479,1.202" StartPoint="0.521,-0.202">
                                        <GradientStop Color="#4FABD9EA" Offset="1" />
                                        <GradientStop Color="#4FD2E7F0" Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.504,1.01" StartPoint="0.501,-0.01">
                                        <GradientStop Color="#FF153899" Offset="0" />
                                        <GradientStop Color="#FF669CE4" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.491,1.203" StartPoint="0.509,-0.203">
                                        <GradientStop Color="#7F6F85EC" Offset="0.005" />
                                        <GradientStop Color="#BF5B6EC5" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeldPauseButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="fillRec" Padding="4,2,4,2" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.504,1.01" StartPoint="0.501,-0.01">
                                <GradientStop Color="#FF153899" Offset="0" />
                                <GradientStop Color="#FF669CE4" Offset="1" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.491,1.203" StartPoint="0.509,-0.203">
                                <GradientStop Color="#7F6F85EC" Offset="0.005" />
                                <GradientStop Color="#BF5B6EC5" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Path Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Stroke="#FFE3B603"
							Data="F1 M 249.972,176.967L 267.139,176.967C 268.795,176.967 270.139,178.31 270.139,179.967L 270.139,241.3C 270.139,242.957 268.795,244.3 267.139,244.3L 249.972,244.3C 248.315,244.3 246.972,242.957 246.972,241.3L 246.972,179.967C 246.972,178.31 248.315,176.967 249.972,176.967 Z M 288.13,176.967L 305.297,176.967C 306.954,176.967 308.297,178.31 308.297,179.967L 308.297,241.3C 308.297,242.957 306.954,244.3 305.297,244.3L 288.13,244.3C 286.474,244.3 285.13,242.957 285.13,241.3L 285.13,179.967C 285.13,178.31 286.474,176.967 288.13,176.967 Z "
							Width="14" Height="14">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0.360512,0.0260379" EndPoint="1.35835,0.0260379">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <SkewTransform CenterX="0.360512" CenterY="0.0260379" AngleX="-2.47444" AngleY="0" />
                                            <RotateTransform CenterX="0.360512" CenterY="0.0260379" Angle="74.4977" />
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FFFFFC2D" Offset="0" />
                                    <GradientStop Color="#FFF7D816" Offset="0.60274" />
                                    <GradientStop Color="#FFEFB400" Offset="1" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="fillRec" Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.513,1.203" StartPoint="0.487,-0.203">
                                        <GradientStop Color="#FFAECDE6" Offset="0" />
                                        <GradientStop Color="#FF7297B7" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.479,1.202" StartPoint="0.521,-0.202">
                                        <GradientStop Color="#4FABD9EA" Offset="1" />
                                        <GradientStop Color="#4FD2E7F0" Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.504,1.01" StartPoint="0.501,-0.01">
                                        <GradientStop Color="#FF153899" Offset="0" />
                                        <GradientStop Color="#FF669CE4" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="fillRec">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.491,1.203" StartPoint="0.509,-0.203">
                                        <GradientStop Color="#7F6F85EC" Offset="0.005" />
                                        <GradientStop Color="#BF5B6EC5" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="InvisibleButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Height="20" Width="4" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Style="{StaticResource PanelControl}"
						BorderBrush="{StaticResource RaisedBorderBrush}" Background="#d0ffffff" CornerRadius="0">
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#a0dddddd" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
                            <Setter TargetName="content" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="content" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupStartToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Style="{StaticResource PanelControl}"
						BorderBrush="{StaticResource RaisedBorderBrush}" Background="#d0ffffff" CornerRadius="2,0,0,2">
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#a0dddddd" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
                            <Setter TargetName="content" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="content" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupEndToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Style="{StaticResource PanelControl}"
						BorderBrush="{StaticResource RaisedBorderBrush}" Background="#d0ffffff" CornerRadius="0,2,2,0">
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#a0dddddd" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
                            <Setter TargetName="content" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="content" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{x:Null}" x:Key="FlatDarkButtonStyle">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FlatDarkButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource FlatDarkButtonTemplate}" />
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource FlatDarkButtonStyle}" x:Key="FlatDarkGreenButtonStyle">
        <Setter Property="Background" Value="Green" />
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource FlatDarkButtonStyle}" x:Key="FlatDarkOrangeButtonStyle">
        <Setter Property="Background" Value="DarkOrange" />
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource FlatDarkButtonStyle}" x:Key="FlatDarkRedButtonStyle">
        <Setter Property="Background" Value="Red" />
    </Style>
    <Style x:Key="FlatDarkButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="FlatDarkButtonTemplate" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <!--<Storyboard x:Key="PressedOn">

                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>-->
            <!--<Storyboard x:Key="PressedOff">

                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>-->
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocussedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" Style="{StaticResource Panel}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
            <Border x:Name="HoverBorder" Opacity="0" Background="{StaticResource TransHoverBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
            <Border x:Name="HoverShineBorder" Opacity="0" Background="{StaticResource HoverShineBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
            <!--<Border x:Name="PressedBorder" Opacity="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="{StaticResource PressedBrush}" />-->
            <!--<Border x:Name="ShineBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="{StaticResource ShineBrush}" Opacity="1" />-->
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
            <Border x:Name="FocusVisualElement" IsHitTestVisible="false" BorderBrush="{StaticResource HoverShineBrush}" BorderThickness="1" CornerRadius="3,3,3,3" Margin="1,1,1,1" Opacity="0" />
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsDefault" Value="True">
                <Setter Property="BorderBrush" TargetName="ShineBorder" Value="{DynamicResource DefaultedBorderBrush}" />
            </Trigger>-->
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource FocussedOff}" x:Name="FocussedOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <!--<Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="true" />
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Background" />
                <!--<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="ShineBorder" />-->
                <Setter Property="Opacity" TargetName="Grid" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonChromeControlTemplateFlat" TargetType="{x:Type xctk:ButtonChrome}">
        <Grid>
            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                <!--<Border x:Name="InnerBorder" BorderBrush="{DynamicResource Xceed.Wpf.Toolkit.Themes.StaticResourceKey}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>-->
            </Border>
            <Border x:Name="MouseOverVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource HoverShineBrush}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="Collapsed">
                <!--<Border x:Name="MouseOverInnerVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>-->
            </Border>
            <Border x:Name="PressedVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="Collapsed">
                <!--<Border x:Name="PressedInnerVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>-->
            </Border>
            <Border x:Name="FocusVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource HoverShineBrush}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="Collapsed">
                <!--<Border x:Name="FocusInnerVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>-->
            </Border>
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" IsEnabled="{TemplateBinding IsEnabled}" Margin="{TemplateBinding Padding}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RenderEnabled" Value="False"/>
                    <Condition Property="RenderChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource Xceed.Wpf.Toolkit.Themes.StaticResourceKey}"/>
                <!--<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{DynamicResource Xceed.Wpf.Toolkit.Themes.StaticResourceKey}"/>-->
                <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource Xceed.Wpf.Toolkit.Themes.StaticResourceKey}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RenderEnabled" Value="True"/>
                    <Condition Property="RenderPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PressedVisual">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PressedVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RenderEnabled" Value="True"/>
                    <Condition Property="RenderChecked" Value="False"/>
                    <Condition Property="RenderMouseOver" Value="True"/>
                    <Condition Property="RenderPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RenderEnabled" Value="True"/>
                    <Condition Property="RenderChecked" Value="True"/>
                    <Condition Property="RenderMouseOver" Value="False"/>
                    <Condition Property="RenderPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource Xceed.Wpf.Toolkit.Themes.StaticResourceKey}"/>
                <!--<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{DynamicResource Xceed.Wpf.Toolkit.Themes.StaticResourceKey}"/>-->
                <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource Xceed.Wpf.Toolkit.Themes.StaticResourceKey}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RenderFocused" Value="True"/>
                    <Condition Property="RenderEnabled" Value="True"/>
                    <Condition Property="RenderPressed" Value="False"/>
                    <Condition Property="RenderMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.115">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RenderNormal" Value="False"/>
                    <Condition Property="RenderChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                <!--<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{x:Null}"/>-->
                <Setter Property="Background" TargetName="OuterBorder" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DropDownButtonStyleFlat" TargetType="{x:Type xctk:DropDownButton}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <ToggleButton x:Name="PART_DropDownButton" Grid.Column="1" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.IsHitTestVisible>
                                <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <xctk:InverseBoolConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </ToggleButton.IsHitTestVisible>
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                </ControlTemplate>
                            </ToggleButton.Template>
                            <Grid>
                                <xctk:ButtonChrome x:Name="ToggleButtonChrome" CornerRadius="2.75" InnerCornerRadius="1.75" RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}" RenderPressed="{Binding IsPressed, ElementName=PART_DropDownButton}" RenderChecked="{TemplateBinding IsOpen}" RenderEnabled="{TemplateBinding IsEnabled}"
                                                   BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                                   Template="{StaticResource ButtonChromeControlTemplateFlat}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="4,3">
                                            <Path x:Name="Arrow" Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="{TemplateBinding Foreground}" Height="4" Width="7"/>
                                        </Grid>
                                    </Grid>
                                </xctk:ButtonChrome>
                            </Grid>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}" Placement="Bottom" StaysOpen="False" VerticalOffset="1">
                                <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}"/>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightArrowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#00000000" Style="{StaticResource PanelControl}" Padding="1" BorderThickness="0"
                      x:Name="border">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#E0888888" Offset="1" />
                                <GradientStop Color="#DAFFFFFF" Offset="0" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Path Stretch="Uniform" Data="M0,8 l15,0 0,-8 13,13 -13,13 0,-8 -15,0 z" StrokeLineJoin="Round"
                      SnapsToDevicePixels="True" x:Name="path">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.656,0.898" StartPoint="0.445,0.164">
                                    <GradientStop Color="#33000000" Offset="1" />
                                    <GradientStop Color="#7F000000" Offset="0" />
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#b0000000" Offset="1" />
                                    <GradientStop Color="#40000000" Offset="0" />
                                </LinearGradientBrush>
                            </Path.Stroke>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#B2000000" Duration="0:0:0.2" Storyboard.TargetName="path"
                                        Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#7F000000" Duration="0:0:0.2" Storyboard.TargetName="path"
                                        Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" FillBehavior="Stop" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="BorderThickness" TargetName="border" Value="1,1,1,1" />
                            <Setter Property="Background" TargetName="border" Value="#19000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>