<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF252525"/>

    <Style TargetType="{x:Type Window}" x:Key="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Icon" Value="pack://application:,,,/Resources/Icon.ico" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
    </Style>
    <Style TargetType="{x:Type NavigationWindow}">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Icon" Value="pack://application:,,,/Resources/Icon.ico" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
    </Style>
    <!-- This is kind of a hack. The WPF designer will pick it up because it instanciates 
       the base class when designing a component. But at runtime the real sub-class is
       instanciated and the style isn't picked up anymore.
       This is good, since it allows me to have the dark blue background behind my controls
       when editing a page in design mode, with the runtime unaffected. -->
    <Style TargetType="{x:Type Page}">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
    </Style>
</ResourceDictionary>