<ctrl:DecorableWindow x:Class="Octgn.DeckBuilder.DeckBuilderWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ctrl="clr-namespace:Octgn.Controls"
                  xmlns:gui="clr-namespace:Octgn.Play.Gui" xmlns:deck="clr-namespace:Octgn.DeckBuilder" xmlns:octgn="clr-namespace:Octgn"
                  x:Name="self" Title="Octgn Deck Builder" Height="650" Width="800" MinHeight="600" MinWidth="800"
                  Style="{StaticResource Window}" WindowIcon="pack://application:,,,/Octgn.JodsEngine;component/Resources/Icon.ico">

    <Window.CommandBindings>
        <CommandBinding Command="gui:Commands.LoadDeck" Executed="LoadDeckCommand" />
        <CommandBinding Command="gui:Commands.NewDeck" Executed="NewDeckCommand" />
        <CommandBinding Command="gui:Commands.SaveDeck" Executed="SaveDeck" CanExecute="IsDeckOpen" />
        <CommandBinding Command="gui:Commands.SaveDeckAs" Executed="SaveDeckAsHandler" CanExecute="IsDeckOpen" />
        <CommandBinding Command="gui:Commands.ExportDeckAs" Executed="ExportDeckAsHandler" CanExecute="IsDeckOpen" />
        <CommandBinding Command="ctrl:TabCommands.NewTabCommand" Executed="OpenTabCommand" />
        <CommandBinding Command="ctrl:TabCommands.CloseTabCommand" Executed="CloseTabCommand" CanExecute="CanCloseTab" />
        <CommandBinding Command="gui:Commands.AlwaysShowProxy" Executed="AlwaysShowProxyCommand" />
    </Window.CommandBindings>

    <Window.Resources>
        <!--Converters-->
        <deck:ActiveSectionConverter x:Key="ActiveSectionConverter" />
        <!--Deck Section Template-->
        <DataTemplate x:Key="DeckSectionTemplate">
            <Expander x:Name="deckExpander" IsExpanded="True" GotFocus="SetActiveSection" AllowDrop="True" Drop="DeckDrop" DragEnter="DeckDragEnter" PreviewKeyDown="DeckExpander_PreviewKeyDown">
                <Expander.Header>
                    <Grid Width="{Binding ActualWidth, Mode=OneWay, ElementName=deckExpander}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30" x:Name="offsetCol" Focusable="False" IsEnabled="False" />
                            <!--^offset for diff from binding, hacky, but the best I've got. should remain empty^-->
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} ({1})">
                                    <Binding Path="Name" Mode="OneTime" />
                                    <Binding Path="Quantity" />
                                </MultiBinding>
                            </TextBlock.Text>
                            <TextBlock.FontWeight>
                                <MultiBinding Converter="{StaticResource ActiveSectionConverter}">
                                    <Binding Path="ActiveSection" ElementName="self" />
                                    <Binding />
                                </MultiBinding>
                            </TextBlock.FontWeight>
                        </TextBlock>
                        <Button x:Name="ChangeSortButton" Grid.Column="1" HorizontalAlignment="Right" Click="ChangeSortButton_Click" Height="Auto" Content="Manual" />
                    </Grid>
                </Expander.Header>
                <DataGrid ItemsSource="{Binding Cards}" AutoGenerateColumns="False" HeadersVisibility="None"
                          CanUserAddRows="False" HorizontalScrollBarVisibility="Hidden" AlternatingRowBackground="#e1ffd7"
                          VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" SelectionChanged="ElementSelected"
                          Keyboard.PreviewKeyDown="DeckKeyDownHandler" CellEditEnding="ElementEditEnd" AllowDrop="True" x:Name="sectionGrid"
                          CanUserSortColumns="False" CanUserReorderColumns="False" DataContextChanged="SectionGrid_DataContextChanged">
                    <DataGrid.RowStyle>
                        <Style>
                            <EventSetter Event="DataGridRow.MouseLeave" Handler="PickUpDeckCard" />
                            <EventSetter Event="DataGridRow.PreviewMouseLeftButtonDown" Handler="DeckCardMouseDown" />
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name, Mode=OneWay}" IsReadOnly="True" Width="*" />
                        <DataGridTextColumn Header="#" Binding="{Binding Quantity}" Width="50" />
                    </DataGrid.Columns>
                </DataGrid>
            </Expander>
        </DataTemplate>
    </Window.Resources>

    <Grid SizeChanged="Grid_SizeChanged">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" MinWidth="215" />
            <ColumnDefinition Width="4" />
            <ColumnDefinition Width="*" MinWidth="280" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="350" MinHeight="18" />
            <RowDefinition Height="4" />
            <RowDefinition Height="*" MinHeight="18" />
        </Grid.RowDefinitions>

        <Menu Grid.ColumnSpan="3">
            <MenuItem Header="Deck">
                <MenuItem Header="New" x:Name="newSubMenu" DisplayMemberPath="Name" Click="NewClicked" />
                <MenuItem Header="Load..." x:Name="loadSubMenu" DisplayMemberPath="Name" Click="LoadClicked" />
                <MenuItem Header="Save" Command="gui:Commands.SaveDeck" />
                <MenuItem Header="Save as..." Command="gui:Commands.SaveDeckAs" />
                <MenuItem Header="Export as..." Command="gui:Commands.ExportDeckAs" />
                <MenuItem Header="Import Images..." Click="ImportImagesClicked"/>
                <Separator />
                <MenuItem Header="Close" Click="CloseClicked" />
            </MenuItem>
            <MenuItem Header="Save Search" IsEnabled="{Binding ElementName=self,Path=IsGameLoaded}">
                <MenuItem Header="Save Search" Click="SaveSearchClick"/>
                <MenuItem Header="Save Search As..." Click="SaveSearchAsClick"/>
                <MenuItem Header="Load Search" Click="LoadSearchClick"/>
            </MenuItem>
            <MenuItem Header="Plugins" x:Name="MenuPlugins">

            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Always Show Proxy" Command="gui:Commands.AlwaysShowProxy" IsChecked="{Binding AlwaysShowProxy, ElementName=self, Mode=OneWay}"/>
                <MenuItem Header="Hide Result Counter" IsCheckable="True" IsChecked="{Binding hideResultCount, ElementName=self, Mode=TwoWay}" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="View Keyboard Shortcuts" Click="showShortcutsClick" />
            </MenuItem>
        </Menu>
        <deck:DeckEditorPreviewControl x:Name="cardImageControl"  Margin="4,4,0,0" Grid.Row="1" />
        <GridSplitter Grid.Row="2" ResizeDirection="Rows" Height="4" VerticalAlignment="Center"
                  HorizontalAlignment="Stretch" Background="Transparent" Grid.ColumnSpan="2" />
        <Border Grid.Row="3" Margin="4,0,0,4" Padding="6" Style="{StaticResource Panel}">
            <TabControl x:Name="DeckTabs" DragLeave="TabControl_DragLeave" IsEnabled="{Binding IsGameLoaded, ElementName=self}">
                <TabItem x:Name="PlayerTab">
                    <TabItem.Header>
                        <TextBlock Text="{Binding Path=DeckSectionsTotalCards, ElementName=self, StringFormat='Player({0})', FallbackValue=Player, TargetNullValue=Player}"
                                   Style="{Binding Parent.Header.Style, RelativeSource={RelativeSource Self}}" />
                    </TabItem.Header>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                        <ItemsControl ItemsSource="{Binding DeckSections, ElementName=self}" x:Name="PlayerCardSections"
                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                      ItemTemplate="{StaticResource ResourceKey=DeckSectionTemplate}" />
                        <!--This ItemControl should have its bindings changeble according to the user's desires (V)_V-->
                    </ScrollViewer>
                </TabItem>
                <TabItem x:Name="GlobalTab">
                    <TabItem.Header>
                        <TextBlock Text="{Binding Path=DeckSharedSectionsTotalCards, ElementName=self, StringFormat='Global({0})', FallbackValue=Global, TargetNullValue=Global}"
                                   Style="{Binding Parent.Header.Style, RelativeSource={RelativeSource Self}}" />
                    </TabItem.Header>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                        <ItemsControl ItemsSource="{Binding DeckSharedSections, ElementName=self}" x:Name="GlobalCardSections"
                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                      ItemTemplate="{StaticResource ResourceKey=DeckSectionTemplate}" />
                        <!--This ItemControl should have its bindings changeble according to the user's desires (V)_V-->
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Notes">
                    <TextBox AcceptsReturn="True" AcceptsTab="True" VerticalScrollBarVisibility="Auto" Text="{Binding ElementName=self,Path=Deck.Notes,Mode=TwoWay}" TextChanged="NotesTextChanged"/>
                </TabItem>
                <TabItem Header="Sleeve">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="100*"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"/>
                            <ColumnDefinition Width="50*"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding SleeveImage, Mode=OneWay, ElementName=self}" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" Stretch="Uniform" >
                        </Image>
                        <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="SteelBlue">
                            <Hyperlink NavigateUri="https://www.octgn.net" RequestNavigate="ChangeSleeve" Cursor="Hand">Change Sleeve</Hyperlink>
                        </TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="SteelBlue">
                            <Hyperlink NavigateUri="https://www.octgn.net" RequestNavigate="RemoveSleeve" Cursor="Hand">Remove Sleeve</Hyperlink>
                        </TextBlock>
                    </Grid>
                </TabItem>
            </TabControl>
        </Border>

        <deck:SleeveManagerView Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" Grid.ColumnSpan="3" Canvas.ZIndex="10" Background="#FF333333" Visibility="Collapsed"
                                     OnClose="OnSleeveManagerClose" x:Name="SleeveManager"/>

        <TabControl x:Name="searchTabs" Style="{StaticResource EditableTabControl}" Grid.Row="1" Grid.RowSpan="3"
                Grid.Column="2" Margin="0,4,4,4" ItemsSource="{Binding Searches, ElementName=self}">
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem" BasedOn="{StaticResource ClosableTabItem}">
                    <Setter Property="Header" Value="{Binding SearchName}" />
                </Style>
            </TabControl.ItemContainerStyle>
        </TabControl>

        <GridSplitter Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" ResizeDirection="Columns" Width="4" HorizontalAlignment="Center"
                  Background="Transparent" />
    </Grid>
</ctrl:DecorableWindow>