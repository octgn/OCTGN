<UserControl x:Class="Octide.Views.SetTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:metro="http://schemas.codeplex.com/elysium"
             xmlns:params="http://schemas.codeplex.com/elysium/params"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:gong="urn:gong-wpf-dragdrop"
             mc:Ignorable="d" 
             xmlns:viewModel="clr-namespace:Octide.ViewModel"
             xmlns:views="clr-namespace:Octide.Views"
             xmlns:local="clr-namespace:Octide"
             d:DesignHeight="900" d:DesignWidth="1100"
             DataContext="{Binding SetTabViewModel, Source={StaticResource Locator}}">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel>
                <Button Content="New Set" Margin="1" Command="{Binding AddSetCommand}" />
            </StackPanel>
            <ListBox Grid.Row="2" ItemsSource="{Binding SetItems}" Background="{DynamicResource BackgroundBrush}" SelectedItem="{Binding SelectedSet}" 
                     gong:DragDrop.IsDragSource="True" gong:DragDrop.IsDropTarget="True" gong:DragDrop.DragDropCopyKeyState="ControlKey">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <local:EditableTextBlock Text="{Binding Name, Mode=TwoWay}" />
                            <Button Style="{StaticResource XButton}" Command="{Binding RemoveCommand}" HorizontalAlignment="Right" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <TabControl Grid.Column="1" Visibility="{Binding SetPanelVisibility}">
            <TabItem Header="Set" >
                <ScrollViewer Margin="10,10,0,20" VerticalScrollBarVisibility="Auto" >
                    <StackPanel Orientation="Vertical">
                        <ItemsControl Style="{StaticResource OctideInputPanel}">
                            <TextBlock Text="Hide Set from Deck Editor" />
                            <StackPanel Orientation="Horizontal">
                                <metro:ToggleSwitch IsChecked="{Binding SelectedSet.Hidden, Mode=TwoWay}" Width="Auto" HorizontalAlignment="Left"/>
                                <TextBlock Text="{Binding SelectedSet.Hidden, Mode=OneWay}" FontSize="16" VerticalAlignment="Center"/>
                            </StackPanel>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Packages" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Visibility="{Binding SetPanelVisibility}" >
                        <Button Content="New Package" Margin="1" Command="{Binding AddPackCommand}" />
                        <Button Content="Remove Package" Margin="1" Command="{Binding RemovePackCommand}" IsEnabled="{Binding EnablePackButton}"/>
                    </StackPanel>
                    <ListBox Grid.Row="1" ItemsSource="{Binding SelectedSet.PackItems}" Background="{DynamicResource BackgroundBrush}" SelectedItem="{Binding SelectedPack}" Visibility="{Binding SetPanelVisibility}"
                                 gong:DragDrop.IsDragSource="True" gong:DragDrop.IsDropTarget="True" gong:DragDrop.DragDropCopyKeyState="ControlKey">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <local:EditableTextBlock Text="{Binding Name, Mode=TwoWay}" />
                                    <Button Style="{StaticResource XButton}" Command="{Binding RemoveCommand}" HorizontalAlignment="Right" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Grid.Column="1" Visibility="{Binding PackPanelVisibility}" >
                        <Button Content="New Options" Margin="1" Command="{Binding SelectedPack.AddOptionsCommand}" Background="{StaticResource PackOptionsBrush}" />
                        <Button Content="New Pick" Margin="1" Command="{Binding SelectedPack.AddPickCommand}" Background="{StaticResource PackPickBrush}"/>
                    </StackPanel>
                    <TreeView Grid.Row="1" Grid.Column="1" Background="Transparent" ItemContainerStyle="{StaticResource TreeViewItemExpandedStyle}"  ItemsSource="{Binding SelectedPack.Items}" Visibility="{Binding PackPanelVisibility}"
                              gong:DragDrop.IsDragSource="True" gong:DragDrop.IsDropTarget="True" gong:DragDrop.DropHandler="{Binding PackageDropHandler}" gong:DragDrop.DragDropCopyKeyState="ControlKey" >
                        <TreeView.Resources>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Foreground" Value="Yellow" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="12" />
                            </Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Width" Value="15" />
                                <Setter Property="Height" Value="15" />
                                <Setter Property="Content" Value="+" />
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="Margin" Value="5,0,0,0" />
                                <Setter Property="Padding" Value="0,-4,0,0" />
                            </Style>
                            <HierarchicalDataTemplate DataType="{x:Type viewModel:PackOptionsItemModel}" ItemsSource="{Binding Items}" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border Padding="5" Background="{StaticResource PackOptionsBrush}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="OPTIONS" />
                                            <Button Style="{StaticResource XButton}" Command="{Binding RemoveCommand}" />
                                        </StackPanel>
                                    </Border>
                                    <Button Grid.Column="1" Background="{StaticResource PackOptionBrush}" ToolTip="New Options Item" Command="{Binding AddOptionCommand}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewModel:PackOptionItemModel}" ItemsSource="{Binding Items}" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border Padding="5" Background="{StaticResource PackOptionBrush}" >
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="PROBABILITY: " />
                                            <TextBox Text="{Binding Probability}" />
                                            <Button Style="{StaticResource XButton}" Command="{Binding RemoveCommand}" />
                                        </StackPanel>
                                    </Border>
                                    <Button Grid.Column="1" Background="{StaticResource PackOptionsBrush}" ToolTip="New Options Item" Command="{Binding AddOptionsCommand}" />
                                    <Button Grid.Column="3" Background="{StaticResource PackPickBrush}" ToolTip="New Pick Item" Command="{Binding AddPickCommand}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewModel:PackPickItemModel}" ItemsSource="{Binding Items}" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border Padding="5" Background="{StaticResource PackPickBrush}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="PICK: " />
                                            <TextBox Text="{Binding Quantity}" >
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                                        <Setter Property="IsEnabled" Value="True" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=UnlimitedBox, Path=IsChecked}" Value="True">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                            <TextBlock Text=" &#x221E;" />
                                            <CheckBox x:Name="UnlimitedBox" IsChecked="{Binding IsUnlimited, Mode=TwoWay}"  />
                                            <Button Style="{StaticResource XButton}" Command="{Binding RemoveCommand}" />
                                        </StackPanel>
                                    </Border>
                                    <Button Grid.Column="1" Background="{StaticResource PackPropertiesBrush}" ToolTip="New Property Item" Command="{Binding AddPropertyCommand}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewModel:PackPropertyItemModel}" ItemsSource="{Binding Items}" >
                                <Border Padding="5" Background="{StaticResource PackPropertiesBrush}">
                                    <StackPanel Orientation="Horizontal">
                                        <ComboBox IsReadOnly="True" Padding="1" FontSize="12" ItemsSource="{Binding CustomProperties}" DisplayMemberPath="Name" SelectedItem="{Binding ActiveProperty, Mode=TwoWay}" />
                                        <TextBox Text="{Binding Value}" />
                                        <Button Style="{StaticResource XButton}" Command="{Binding RemoveCommand}" />
                                    </StackPanel>
                                </Border>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                    <Grid Grid.Column="2" Visibility="{Binding PackPanelVisibility}">
                        <Button Content="Generate Pack" HorizontalAlignment="Center" VerticalAlignment="Bottom" Command="{Binding SelectedPack.GeneratePackCommand}" />
                    </Grid>


                    <ListBox Grid.Column="2" Grid.Row="1" ItemsSource="{Binding SelectedPack.BoosterCards}" Focusable="False" Visibility="{Binding PackPanelVisibility}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <Image Source="{Binding }" Height="180" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>
            
            <TabItem Header="Markers" >

            </TabItem>
            <TabItem Header="Cards" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="350" />
                    </Grid.ColumnDefinitions>
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Visibility="{Binding SetPanelVisibility}" >
                            <Button Content="New Card" Margin="1" Command="{Binding AddCardCommand}" />
                        </StackPanel>
                        <ListBox Grid.Row="2" ItemTemplate="{StaticResource RemoveableListBoxItem}" ItemsSource="{Binding SelectedSet.CardItems}" Background="{DynamicResource BackgroundBrush}" SelectedItem="{Binding SelectedCard}"
                                 gong:DragDrop.IsDragSource="True" gong:DragDrop.IsDropTarget="True" gong:DragDrop.DragDropCopyKeyState="ControlKey" />
                    </Grid>
                    <Grid Grid.Column="1" Margin="10,10,0,20" Visibility="{Binding CardPanelVisibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto">
                            <StackPanel Orientation="Horizontal" >
                                <ListBox ItemsSource="{Binding SelectedCard.AltItems}" SelectedItem="{Binding SelectedAlt}" >
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding AltName, Mode=OneWay}" />
                                                <Button Command="{Binding RemoveAltCommand}">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource XButton}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Alt}" Value="">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                </ListBox>
                                <Button Margin="6" Style="{StaticResource NewItemButton}" Command="{Binding AddAltCommand}" />
                            </StackPanel>
                        </ScrollViewer>
                        <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2" VerticalScrollBarVisibility="Auto" Visibility="{Binding AltPanelVisibility}">
                            <StackPanel Orientation="Vertical">
                                <ItemsControl Style="{StaticResource OctideInputPanel}" >
                                    <TextBlock Text="Alternate Flag" Visibility="{Binding SelectedAlt.IsDefault}"/>
                                    <TextBox Text="{Binding SelectedAlt.Alt, Mode=TwoWay}" Visibility="{Binding SelectedAlt.IsDefault}"/>
                                    <TextBlock Text="Size"/>
                                    <ComboBox IsReadOnly="True" ItemsSource="{Binding CardSizes}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedAlt.CardSize, Mode=TwoWay}" >
                                    </ComboBox>
                                </ItemsControl>
                                <ItemsControl ItemsSource="{Binding SelectedAlt.GetProperties}" ItemContainerStyle="{StaticResource OctideInputPanel}" >
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <TextBlock Text="{Binding Name, Mode=OneWay}"/>
                                                <TextBox Text="{Binding Value, Mode=TwoWay}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                    <GridSplitter Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5" ResizeDirection="Columns" Background="Black" Visibility="{Binding AltPanelVisibility}"/>
                    <Grid Grid.Column="3" Visibility="{Binding AltPanelVisibility}">
                        <StackPanel Orientation="Vertical">
                            <Button VerticalAlignment="Top" BorderThickness="1,0,1,1" Height="Auto" Width="90" Click="DeleteClicked">
                                <TextBlock Text="Delete Image" HorizontalAlignment="Center" Foreground="White"/>
                            </Button>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="100*"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.ColumnSpan="3" Height="200" Source="{Binding SelectedAlt.CardImage, Mode=OneWay}" Drop="OnImageDrop" AllowDrop="True" DragEnter="OnImageDragEnter" DragLeave="OnImageDragLeave" GiveFeedback="OnImageGiveFeedback" />
                                <Border x:Name="ReplaceIcon" Grid.Column="1" Background="Black" Opacity="0.4" CornerRadius="20" VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False" Padding="10" Visibility="Collapsed">
                                    <StackPanel>
                                        <TextBlock Foreground="White" FontWeight="Bold" FontSize="24" Text="Replace Image"/>
                                        <Grid Height="9.334" Width="27"/>
                                        <Rectangle Width="100" Height="80" RenderTransformOrigin="0.5,0.5">
                                            <Rectangle.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform Angle="90"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Rectangle.RenderTransform>
                                            <Rectangle.Fill>
                                                <DrawingBrush Stretch="Uniform">
                                                    <DrawingBrush.Drawing>
                                                        <DrawingGroup>
                                                            <DrawingGroup.Children>
                                                                <GeometryDrawing Brush="White" Geometry="F1 M 85.7631,138.267L 68.4351,120.939C 67.8271,120.331 66.9125,120.148 66.1178,120.478C 65.3231,120.807 64.8058,121.584 64.8058,122.443L 64.8058,131.691L 39.9031,131.691L 39.9031,147.85L 64.8058,147.85L 64.8058,157.077C 64.8058,157.96 65.3231,158.736 66.1178,159.064C 66.3805,159.172 66.6565,159.224 66.9298,159.224C 67.4845,159.224 68.0285,159.01 68.4351,158.602L 85.7631,141.274C 86.1591,140.878 86.3871,140.331 86.3871,139.77C 86.3871,139.211 86.1591,138.662 85.7631,138.267 Z "/>
                                                            </DrawingGroup.Children>
                                                        </DrawingGroup>
                                                    </DrawingBrush.Drawing>
                                                </DrawingBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </StackPanel>
                                </Border>
                            </Grid>
                            <views:ProxyDesignView Width="Auto"/>
                            <!-- <Image Source="{Binding SelectedAlt.ProxyImage, Mode=OneWay}" /> -->
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
