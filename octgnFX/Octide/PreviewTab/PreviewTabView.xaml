<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<UserControl x:Class="Octide.Views.PreviewTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:views="clr-namespace:Octide.Views"
             xmlns:viewModel="clr-namespace:Octide.ViewModel"
             xmlns:model="clr-namespace:Octide.ItemModel"
             xmlns:local="clr-namespace:Octide"
             xmlns:gong="urn:gong-wpf-dragdrop"
             mc:Ignorable="d" 
             xmlns:params="http://schemas.codeplex.com/elysium/params"
             params:Design.Theme="Dark"
             d:DesignHeight="600" d:DesignWidth="800"
             DataContext="{Binding PreviewTabViewModel, Source={StaticResource Locator}}" ClipToBounds="True"
             PreviewMouseLeftButtonUp="ControlMouseUp"
             >
    <UserControl.Resources>

        <DataTemplate x:Key="GroupPanel" >
            <Border Style="{StaticResource PanelControl}" MinWidth="100" PreviewMouseRightButtonUp="CreateActionsMenu" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <Image Source="{Binding Icon}" Height="16" HorizontalAlignment="Left" />
                        <local:EditableTextBlock Text="{Binding Name, Mode=TwoWay}" Foreground="Black" FontSize="12" MinWidth="25" VerticalAlignment="Center" ClipToBounds="False" />
                    </StackPanel>

                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="CollapsedGroupPanel" >
            <Border Style="{StaticResource PanelControl}" MinWidth="100" PreviewMouseRightButtonUp="CreateActionsMenu">
                <Grid >
                    <Image Source="{Binding Icon}" Height="16" ToolTip="{Binding Name}"/>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="CounterPanel">
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding Icon}" Height="20" />
                <local:EditableTextBlock VerticalAlignment="Center" Text="{Binding Name}" Foreground="White" FontSize="12" MinWidth="20" Width="Auto" />
                <Border BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource ControlBorderBrush}" Background="{StaticResource ControlFillBrush}" VerticalAlignment="Center">
                    <Grid Height="20" Width="60">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBox Text="{Binding DefaultValue}" BorderThickness="1" Foreground="Black" BorderBrush="Gray" Background="#11000000" FontWeight="Bold"  Grid.RowSpan="2" VerticalAlignment="Center" HorizontalContentAlignment="Right"/>
                        <RepeatButton Content="+" Command="{Binding IncreaseCommand}" Style="{StaticResource SpinUp}" Focusable="False" Grid.Column="1" Grid.Row="0" />
                        <RepeatButton Content="-" Command="{Binding DecreaseCommand}" Style="{StaticResource SpinDown}" Focusable="False" Grid.Column="1" Grid.Row="1" />
                    </Grid>
                </Border>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5" />
            <RowDefinition Height="200" MinHeight="200"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="300" MinWidth="300"/>
        </Grid.ColumnDefinitions>

        <Grid ClipToBounds="False" >
            <Border x:Name="PhaseControl" Panel.ZIndex="3" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button Content="Add Phase" Foreground="Black" Padding="0" HorizontalAlignment="Stretch" Height="25" VerticalContentAlignment="Center"
                            Background="{StaticResource ControlFillBrush}" BorderBrush="{StaticResource ControlBorderBrush}" Command="{Binding AddPhaseCommand}" />
                    <ListBox Grid.Row="1" Style="{StaticResource IdeBaseItemContainerStyle}" ItemsSource="{Binding Phases}" SelectedValue="{Binding Selection}" 
                     Padding="0" HorizontalContentAlignment="Right" Background="Transparent" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <local:EditableTextBlock Text="{Binding Name, Mode=TwoWay}" CanEdit="{Binding CanEdit}" Padding="3" Background="#444444" Foreground="WhiteSmoke" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" ClipToBounds="False" />
                                    <Border BorderThickness="3" BorderBrush="Gray">
                                        <Image Source="{Binding Icon}" StretchDirection="DownOnly" MaxHeight="50" />
                                    </Border>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>
            <ToggleButton Style="{StaticResource VirtualListBox}" IsChecked="{Binding ClickTable, Mode=TwoWay}"  gong:DragDrop.IsDropTarget="True" gong:DragDrop.DropHandler="{Binding TableDropHandler}" >
                <Border DataContext="{Binding Table}" Background="{Binding PreviewTabViewModel.Table.BackgroundImage, Source={StaticResource Locator}}" PreviewMouseRightButtonUp="CreateActionsMenu" />
            </ToggleButton>
            <Viewbox Stretch="Uniform">
                <AdornerDecorator >
                    <AdornerDecorator.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="{Binding Table.Zoom}" ScaleY="{Binding Table.Zoom}"
                            CenterX="0" CenterY="0" />
                            <TranslateTransform X="{Binding Table.Offset.X}"
                                Y="{Binding Table.Offset.Y}" />
                        </TransformGroup>
                    </AdornerDecorator.RenderTransform>
                    <Grid ClipToBounds="False">
                        <Canvas x:Name="boardView" Focusable="False" MouseMove="BoardViewMove" MouseLeave="ResetCursor" Width="{Binding Table.Width}" Height="{Binding Table.Height}" 
                                gong:DragDrop.IsDropTarget="True" gong:DragDrop.DropHandler="{Binding TableDropHandler}">
                            <Canvas DataContext="{Binding ActiveBoard}" Left="{Binding XPos, Mode=TwoWay}" Top="{Binding YPos, Mode=TwoWay}" MouseLeftButtonDown="BoardMouseDown" PreviewMouseLeftButtonUp="BoardMouseUp" >
                                <Border Width="{Binding Width}" Height="{Binding Height}" Canvas.ZIndex="2" Background="Transparent"
                                                BorderBrush="#88FF7F50" BorderThickness="1" ClipToBounds="False">
                                    <Border HorizontalAlignment="Center" VerticalAlignment="Top" Background="#AA333333">
                                        <TextBlock Foreground="White" Margin="2" FontSize="12" TextWrapping="Wrap">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0:0}, {1:0}">
                                                    <Binding Path="XPos" />
                                                    <Binding Path="YPos" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Border>
                                </Border>
                                <Image Source="{Binding Icon}" Width="{Binding Width}" Height="{Binding Height}"/>
                            </Canvas>
                        </Canvas>
                        <ItemsControl x:Name="cardsView" ItemsSource="{Binding Cards}" Focusable="False" MouseMove="CardsViewMouseMove" MouseLeave="ResetCursor" 
                                      gong:DragDrop.IsDropTarget="True" gong:DragDrop.DropHandler="{Binding TableDropHandler}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Canvas Left="{Binding X, Mode=TwoWay}" Top="{Binding Y,Mode=TwoWay}" PreviewMouseMove="CardMouseMove" MouseLeftButtonDown="CardMouseDown" PreviewMouseLeftButtonUp="CardMouseUp" >
                                        <Border Width="{Binding CardWidth}" Height="{Binding CardHeight}" Canvas.ZIndex="2" PreviewMouseRightButtonUp="CreateActionsMenu" 
                                                BorderBrush="#88FF7F50" BorderThickness="1" ClipToBounds="False" Background="Transparent">
                                            <Border HorizontalAlignment="Center" VerticalAlignment="Top" Background="#AA333333">
                                                <TextBlock Foreground="White" Margin="2" FontSize="12" TextWrapping="Wrap">
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="{}{0}, {1:0}">
                                                            <Binding Path="X" />
                                                            <Binding Path="Y" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </Border>
                                        </Border>
                                        <Rectangle Width="{Binding CardWidth}" Height="{Binding CardHeight}" RadiusX="{Binding CardCornerRadius}" RadiusY="{Binding CardCornerRadius}" >
                                            <Rectangle.Fill>
                                                <ImageBrush ImageSource="{Binding CardImage}" AlignmentX="Center" AlignmentY="Center" Stretch="Uniform"/>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Canvas>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.Left" Value="{Binding X}" />
                                    <Setter Property="Canvas.Top" Value="{Binding Y}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas Width="{Binding Table.Width}" Height="{Binding Table.Height}" ClipToBounds="False" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                </AdornerDecorator>
            </Viewbox>
        </Grid>

        <TabControl Grid.Row="2" Style="{x:Null}" Background="Black" Margin="0" Padding="0" BorderThickness="0" ItemContainerStyle="{StaticResource IdeTabItemStyle}" >
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="Global Tab" VerticalAlignment="Center" Margin="0,0,5,0" />
                        <Border BorderBrush="Black" BorderThickness="2" Padding="1" Background="#DDDDDD" >
                            <local:EditableTextBlock Text="{Binding GlobalSummary}" Margin="5,0,0,0" FontSize="11" MinWidth="25" VerticalAlignment="Center" Foreground="Black" />
                        </Border>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ListBox Style="{StaticResource IdeBaseItemContainerStyle}" ItemsSource="{Binding GlobalCounters}" ItemTemplate="{StaticResource CounterPanel}" SelectedValue="{Binding Selection}"
                             Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <Button Margin="6" Grid.Column="1" Style="{StaticResource NewItemButton}" Command="{Binding AddGlobalCounterCommand}" />
                    <ListBox Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Disabled" Style="{StaticResource IdeBaseItemContainerStyle}" ItemTemplate="{StaticResource GroupPanel}" SelectedValue="{Binding Selection}" ItemsSource="{Binding GlobalPiles, Mode=TwoWay}"
                                         VerticalAlignment="Stretch" Focusable="False" VerticalContentAlignment="Stretch" >
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <Button Margin="6" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Style="{StaticResource NewItemButton}" Command="{Binding AddGlobalPileCommand}" />
                </Grid>
            </TabItem>


            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="Player Tab" VerticalAlignment="Center" Margin="0,0,5,0" />
                        <Border BorderBrush="Black" BorderThickness="2" Padding="1" Background="#DDDDDD" >
                            <local:EditableTextBlock Text="{Binding Summary}" FontSize="11" MinWidth="25" VerticalAlignment="Center" Foreground="Black" />
                        </Border>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ListBox Style="{StaticResource IdeBaseItemContainerStyle}" ItemTemplate="{StaticResource CounterPanel}" ItemsSource="{Binding Counters}" SelectedValue="{Binding Selection}" 
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" Focusable="False">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <Button Margin="6" Grid.Column="1" Style="{StaticResource NewItemButton}" Command="{Binding AddCounterCommand}" />

                    <ScrollViewer PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" >
                        <ListBox ItemTemplate="{StaticResource GroupPanel}" ItemsSource="{Binding Piles, Mode=TwoWay}" SelectedValue="{Binding Selection}"
                                        Focusable="False" VerticalAlignment="Stretch" DockPanel.Dock="Right" VerticalContentAlignment="Stretch">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                    </ScrollViewer>
                    <Button Margin="6" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Style="{StaticResource NewItemButton}" Command="{Binding AddPileCommand}" />
                </Grid>
            </TabItem>
            <TabItem Header="Card Sizes" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ListBox Style="{StaticResource IdeHorizontalListBoxControl}" ItemsSource="{Binding CardSizes}" SelectedValue="{Binding Selection}" >
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type ListBoxItem}">
                                <DockPanel >
                                    <local:EditableTextBlock DockPanel.Dock="Bottom" Text="{Binding Name, Mode=TwoWay}" Grid.Row="1" Foreground="White" FontSize="12" VerticalAlignment="Center" ClipToBounds="False" />
                                    <Image Source="{Binding Icon}" Stretch="Uniform" Margin="0 0 0 4"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button Margin="6" Grid.Column="2" HorizontalAlignment="Left" Style="{StaticResource NewItemButton}" Command="{Binding AddSizeCommand}" />
                </Grid>
            </TabItem>
            <TabItem Header="Game Boards" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ListBox Style="{StaticResource IdeHorizontalListBoxControl}" ItemsSource="{Binding Boards}" SelectedValue="{Binding Selection}">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type ListBoxItem}">
                                <DockPanel>
                                    <local:EditableTextBlock DockPanel.Dock="Bottom" Text="{Binding Name, Mode=TwoWay}" Grid.Row="1" Foreground="White" FontSize="12" VerticalAlignment="Center" ClipToBounds="False" />
                                    <Image Source="{Binding Icon}" Stretch="Uniform" Margin="0 0 0 4" />
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button Margin="6" Grid.Column="1" HorizontalAlignment="Left" Style="{StaticResource NewItemButton}" Command="{Binding AddBoardCommand}" />
                </Grid>
            </TabItem>
        </TabControl>
        <GridSplitter Grid.Column="1" Grid.RowSpan="4"  ResizeDirection="Columns"  />

        <GridSplitter Grid.Row="1" ResizeDirection="Rows"  />

        <ContentControl Margin="10,0,10,0" Grid.Column="2" Grid.RowSpan="4" Content="{Binding Selection}" >
            <ContentControl.Resources>


                <DataTemplate DataType="{x:Type model:GroupItemModel}" >
                    <views:GroupItemView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:CounterItemModel}" >
                    <views:CounterItemView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:SizeItemModel}" >
                    <views:SizeItemView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:BoardItemModel}" >
                    <views:BoardItemView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:PhaseItemModel}" >
                    <views:PhaseItemView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:TableItemModel}" >
                    <views:TableItemView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:ActionItemModel}" >
                    <views:ActionItemView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:ActionSeparatorItemModel}" >
                    <views:ActionSeparatorItemView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type model:ActionSubmenuItemModel}" >
                    <views:ActionSubmenuItemView />
                </DataTemplate>

            </ContentControl.Resources>
        </ContentControl>

        <Popup x:Name="ActionMenuPopup" Placement="MousePoint" StaysOpen="False" Focusable="True">
            <Popup.Resources>
                <Style TargetType="{x:Type TreeView}">
                    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                    <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
                    <Setter Property="gong:DragDrop.IsDragSource" Value="True" />
                    <Setter Property="gong:DragDrop.IsDropTarget" Value="True" />
                    <Setter Property="gong:DragDrop.DropHandler" Value="{Binding ActionsDropHandler }" />
                    <Setter Property="gong:DragDrop.DragDropCopyKeyState" Value="ControlKey" />
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TreeViewItem}" >
                                <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource HighlightBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="SkyBlue"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="False" >
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
                <DataTemplate DataType="{x:Type model:ActionItemModel}" >
                    <Grid ContextMenu="{StaticResource ListBoxContextMenu}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="A" Width="*" />
                            <ColumnDefinition SharedSizeGroup="B" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <local:EditableTextBlock Text="{Binding Name}" Margin="0,0,4,0" FontSize="12" Foreground="WhiteSmoke">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </local:EditableTextBlock>
                        <TextBlock Text="{Binding Shortcut}" Margin="0,0,4,0" Grid.Column="1" FontSize="10" Foreground="#999999"/>
                    </Grid>
                </DataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type model:ActionSubmenuItemModel}" ItemsSource="{Binding Items}" >
                    <local:EditableTextBlock Text="{Binding Name}" ContextMenu="{StaticResource ListBoxContextMenu}" Margin="0,0,4,0" FontSize="12" Foreground="WhiteSmoke"/>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type model:ActionSeparatorItemModel}" >
                    <Separator HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Height="50" Grid.ColumnSpan="2" ContextMenu="{StaticResource ListBoxContextMenu}" />
                </DataTemplate>
            </Popup.Resources>

            <StackPanel Orientation="Vertical" Background="#333333" >
                <StackPanel x:Name="GroupActionsPanel" Orientation="Vertical" Margin="3">
                    <TextBlock Padding="6,3,6,3" Text="{Binding Name}" Background="#555555" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" />
                    <Rectangle Height="1" Fill="WhiteSmoke" />
                    <TreeView x:Name="GroupActionsTreeView" BorderThickness="0" Background="Transparent" ItemsSource="{Binding GroupActions, Mode=TwoWay}" SelectedItemChanged="ClickGroupAction" />
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource NewActionButton}" Content="Add Action" Command="{Binding NewActionCommand}" CommandParameter="{Binding GroupActions}"/>
                        <Button Style="{StaticResource NewActionButton}" Content="Add Submenu" Command="{Binding NewSubmenuCommand}" CommandParameter="{Binding GroupActions}"/>
                        <Button Style="{StaticResource NewActionButton}" Content="Add Separator" Command="{Binding NewSeparatorCommand}" CommandParameter="{Binding GroupActions}"/>
                    </StackPanel>

                </StackPanel>
                <StackPanel x:Name="CardActionsPanel" Orientation="Vertical" Margin="3" HorizontalAlignment="Stretch" >
                    <TextBlock Padding="6,3,6,3" Text="Card" Background="#555555" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" />
                    <Rectangle Height="1" Fill="WhiteSmoke" />
                    <TreeView x:Name="CardActionsTreeView" HorizontalAlignment="Stretch" BorderThickness="0" Background="Transparent" ItemsSource="{Binding CardActions, Mode=TwoWay}" SelectedItemChanged="ClickCardAction"  />
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource NewActionButton}" Content="Add Action" Command="{Binding NewActionCommand}" CommandParameter="{Binding CardActions}"/>
                        <Button Style="{StaticResource NewActionButton}" Content="Add Submenu" Command="{Binding NewSubmenuCommand}" CommandParameter="{Binding CardActions}"/>
                        <Button Style="{StaticResource NewActionButton}" Content="Add Separator" Command="{Binding NewSeparatorCommand}" CommandParameter="{Binding CardActions}"/>
                    </StackPanel>
                </StackPanel>

                <Rectangle Height="1" Margin="5,10,5,10" Fill="WhiteSmoke" />

                <StackPanel Orientation="Horizontal">
                    <Button Content="Remove Group" Command="{Binding RemoveCommand}" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NewActionButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanRemove}" Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Copy Group" Command="{Binding CopyCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NewActionButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanCopy}" Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Insert Group" Command="{Binding InsertCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NewActionButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanInsert}" Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Popup>
    </Grid>
</UserControl>
