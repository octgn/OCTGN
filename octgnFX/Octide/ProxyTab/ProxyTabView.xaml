<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<UserControl x:Class="Octide.Views.ProxyTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:gong="urn:gong-wpf-dragdrop"
             xmlns:metro="http://schemas.codeplex.com/elysium"
             xmlns:views="clr-namespace:Octide.Views"
             xmlns:viewModel="clr-namespace:Octide.ViewModel"
             xmlns:itemModel="clr-namespace:Octide.ItemModel"
             xmlns:local="clr-namespace:Octide"
             mc:Ignorable="d" 
             xmlns:params="http://schemas.codeplex.com/elysium/params"
             params:Design.Theme="Dark"
             d:DesignHeight="600" d:DesignWidth="900"
             DataContext="{Binding ProxyTabViewModel, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type viewModel:ProxyOverlayViewModel}">
            <views:ProxyOverlayView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:ProxyTextBlockViewModel}">
            <views:ProxyTextBlockView />
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="200" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="300" MinWidth="300" />
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel>
                <Button Content="New Template" Margin="1" Command="{Binding AddCommand}" />
            </StackPanel>
            <ListBox Grid.Row="1" Style="{StaticResource IdeListBoxControl}" ItemsSource="{Binding Templates}" SelectedItem="{Binding SelectedItem}" >
                <ListBox.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding SelectedItem.RemoveCommand}" />
                </ListBox.InputBindings>
            </ListBox>
            <Viewbox Stretch="Uniform" Grid.Row="1" Grid.Column="1" >
                <Grid ClipToBounds="True">
                    <!-- <Image Source="{Binding ProxyImage}" Width="300"/> -->
                    <Image Source="{Binding BaseImage}" Width="{Binding BaseWidth}" Height="{Binding BaseHeight}" Panel.ZIndex="0" />

                    <ItemsControl ItemsSource="{Binding ActiveOverlayLayers}" x:Name="OverlayBlocks" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type itemModel:ProxyOverlayItemModel}">
                                <Image Source="{Binding Asset.FullPath}" Width="{Binding Width}" Height="{Binding Height}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <ItemsControl ItemsSource="{Binding ActiveTextLayers}" x:Name="TextBlocks" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="Canvas.Left" Value="{Binding TextBlock.Left}"/>
                                <Setter Property="Canvas.Top" Value="{Binding TextBlock.Top}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Value}" Width="{Binding TextBlock.Width}" Height="{Binding TextBlock.Height}"
                                             TextAlignment="{Binding TextBlock.TextAlignment}" VerticalAlignment="{Binding TextBlock.VerticalAlignment}"
                                             FontSize="{Binding TextBlock.FontSize}" Foreground="{Binding TextBlock.FontBrush}" FontFamily="{Binding TextBlock.Font}"
                                                         
                                             TextWrapping="{Binding TextBlock.WordWrap}" >
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Viewbox>
            <DataGrid BorderThickness="0" Grid.Row="1" Grid.Column="2" ItemsSource="{Binding StoredProxyProperties}"
                      AutoGenerateColumns="False" Background="Transparent" RowBackground="DarkGray" AlternatingRowBackground="Gray" CanUserAddRows="True" CanUserDeleteRows="True" x:Name="ProxyDataGrid" >
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                        <Setter Property="Foreground" Value="Black" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Property" Width="60" CanUserResize="False" Binding="{Binding Name}" IsReadOnly="False" Foreground="WhiteSmoke">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Value" Width="100" CanUserResize="False" Binding="{Binding Value}" IsReadOnly="False" Foreground="WhiteSmoke">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="5" ResizeDirection="Rows" Background="Black" />
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="Text Blocks" Foreground="WhiteSmoke" FontSize="20" TextDecorations="UnderLine" FontWeight="Bold"/>
            <ListBox Grid.Row="1" ItemsSource="{Binding TextBlocks}" SelectedValue="{Binding Selection}" Style="{StaticResource IdeListBoxControl}"
                                gong:DragDrop.IsDragSource="True" gong:DragDrop.IsDropTarget="True" gong:DragDrop.UseDefaultDragAdorner="True" gong:DragDrop.DragDropCopyKeyState="ControlKey" >
            </ListBox>
            <TextBlock Text="Overlay Blocks" Grid.Column="2" Foreground="WhiteSmoke" FontSize="20" TextDecorations="UnderLine" FontWeight="Bold" />
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" Background="Transparent" Grid.Row="1" Grid.Column="2" >
                <ListBox Style="{StaticResource GenericIdeListBoxStyle}" 
                                 ItemsSource="{Binding OverlayBlocks}" SelectedValue="{Binding Selection}" VerticalContentAlignment="Stretch"
                                 gong:DragDrop.IsDragSource="True" gong:DragDrop.IsDropTarget="True" gong:DragDrop.UseDefaultDragAdorner="True" gong:DragDrop.DragDropCopyKeyState="ControlKey" >
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type itemModel:ProxyOverlayItemModel}">
                            <Grid Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Asset.FullPath, TargetNullValue={x:Null}}" Stretch="Uniform" Margin="0,0,0,4" />
                                <TextBlock Text="{Binding Name}" Grid.Row="1" Foreground="White" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>
        </Grid>

        <GridSplitter Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5" ResizeDirection="Columns" Background="Black" />


        <ContentControl Margin="10,0,10,0" Content="{Binding ActiveView}" Grid.Column="2" Grid.RowSpan="3" />
    </Grid>
</UserControl>
